<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python语法</title>
      <link href="/2023/02/23/Python2/"/>
      <url>/2023/02/23/Python2/</url>
      
        <content type="html"><![CDATA[<h1 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h1><p>字面量： 在代码中，被写下来的固定值，称为字面量</p><p>Python中常用的有6中数据类型</p><table><thead><tr><th>类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>数字 number</td><td>整数 int<br />浮点数 float<br />复数 complex<br />布尔 bool</td><td>整数<br />浮点数<br />复数<br />布尔值</td></tr><tr><td>字符串 string</td><td>描述文本的数据类型</td><td>任意数量的字符组成</td></tr><tr><td>列表 list</td><td>有序的可变序列</td><td>Python中使用最频繁的数据类型，可有序记录一堆数据</td></tr><tr><td>元组 tuple</td><td>有序的不可变序列</td><td>有序记录一堆不可变的Python数据集合</td></tr><tr><td>集合 set</td><td>无序不重复集合</td><td>无序记录一堆不重复的Python数据集合</td></tr><tr><td>字典 dictionary</td><td>无序Key-Value集合</td><td>无序记录一堆Key-Value型的Python数据集合</td></tr></tbody></table><blockquote><p>python中，字符串需要用 “ ” 包围</p></blockquote><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>注释： 代码中对程序代码进行解释说明的文字</p><p>作用： 注释不会被执行，仅对程序代码进行解释说明</p><ul><li>单行注释： 以 # 开头，#右边的文字进行解释说明，</li></ul><blockquote><p>“#”  和注释内容一般建议以一个空格隔开</p></blockquote><ul><li>多行注释： 以一对三个 “ ” “ 引起来，解释说明代码，” 中的内容可以不止一行。</li></ul><blockquote><p> 多行注释一般用于解释: </p><ul><li>整个Python代码文件</li><li>类</li><li>方法</li></ul></blockquote><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>变量： 程序运行时，存储计算结果或能表示值的抽象概念</p><p>格式： 变量名称 &#x3D; 变量的值</p><p>特征：变量的值可以发生改变</p><p>Python数据输出： print（），（）中即为输出内容</p><p>Python输出多份内容： 各内容之间用 ， 隔开，如 print（内容1，内容2…内容n）</p><p>Python数据输入：input（），（）中即为输出内容</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>数据类型： 入门阶段主要接触 字符串string 整型int 浮点型float 三种</p><p>验证数据类型： type（被查看类型的数据）</p><p>用变量存储type（）的返回值： 变量名 &#x3D; type（被查看类型的数据）</p><blockquote><p>变量没有类型,常说的变量类型指的是变量数据的类型</p></blockquote><p>类型转换：改变一个数据的类型。 类型（数据），如 int（X），即为将x转为int型</p><blockquote><ul><li>任何类型都能转为字符串类</li><li>只有字符串全为数字才能转数字类型</li><li>浮点数转整数会丢失精度</li></ul></blockquote><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>Python中可以给许多东西取名，如：变量、方法、类等。这些名字，统一称为标识符，用来做内容的标记。</p><h2 id="命名规则（强制性要求）"><a href="#命名规则（强制性要求）" class="headerlink" title="命名规则（强制性要求）"></a>命名规则（强制性要求）</h2><ol><li>内容限定</li></ol><p>标识符命名只允许出现：</p><ul><li>英文</li><li>中文</li><li>数字</li><li>下划线 _</li></ul><blockquote><ol><li><p>不推荐使用中文</p></li><li><p>不能以数字开头</p></li></ol></blockquote><ol start="2"><li>大小写敏感</li></ol><p>Python能完全区分大小写</p><ol start="3"><li>不可使用关键字</li></ol><p>Python有一系列单词，称为关键字，不能以关键字作为标识符</p><p>关键字同样大小写敏感</p><h2 id="命名规范（建议型要求）"><a href="#命名规范（建议型要求）" class="headerlink" title="命名规范（建议型要求）"></a>命名规范（建议型要求）</h2><p>变量命名规范：</p><ol><li>见名知意</li><li>下划线命名法：多个单词组合变量名，用下划线做分隔</li><li>英文字母全小写</li></ol><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>算术运算符</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>数学相加 1+1&#x3D;2</td></tr><tr><td>-</td><td>减</td><td>得到复数 -1<br />数学相减 2-1&#x3D;1</td></tr><tr><td>*</td><td>乘</td><td>数学相乘 2*2&#x3D;4</td></tr><tr><td>&#x2F;</td><td>除</td><td>数学相除 4&#x2F;2&#x3D;2</td></tr><tr><td>&#x2F;&#x2F;</td><td>取整</td><td>返回商的整数部分 111 &#x2F;&#x2F; 10&#x3D;11</td></tr><tr><td>%</td><td>取余</td><td>返回除法的余数 9%2&#x3D;1</td></tr><tr><td>**</td><td>指数</td><td>数学指数 3**3&#x3D;27</td></tr></tbody></table><p>赋值运算符</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td><td>将 &#x3D; 右边的值赋给 &#x3D; 左边</td></tr><tr><td>+&#x3D;</td><td>加法赋值</td><td>c +&#x3D; a 等于 c &#x3D; c + a</td></tr><tr><td>-&#x3D;</td><td>减法赋值</td><td>c -&#x3D; a 等于 c &#x3D; c - a</td></tr><tr><td>*&#x3D;</td><td>乘法赋值</td><td>c *&#x3D; a 等于 c &#x3D; c * a</td></tr><tr><td>&#x2F;&#x3D;</td><td>除法赋值</td><td>c &#x2F;&#x3D; a 等于 c &#x3D; c &#x2F; a</td></tr><tr><td>%&#x3D;</td><td>取模赋值</td><td>c %&#x3D; a 等于 c &#x3D; c % a</td></tr><tr><td>**&#x3D;</td><td>幂赋值</td><td>c ** &#x3D; a 等于 c &#x3D; c ** a</td></tr><tr><td>&#x2F;&#x2F;&#x3D;</td><td>取整除赋值</td><td>c &#x2F;&#x2F;&#x3D; a 等于 c &#x3D; c &#x2F;&#x2F; a</td></tr></tbody></table><h1 id="字符串拓展"><a href="#字符串拓展" class="headerlink" title="字符串拓展"></a>字符串拓展</h1><h2 id="字符串定义"><a href="#字符串定义" class="headerlink" title="字符串定义"></a>字符串定义</h2><ol><li>单引号定义：变量名 &#x3D; ‘ 内容 ‘</li><li>双引号定义：变量名 &#x3D; “ 内容 “</li><li>三引号定义：变量名 &#x3D; “”” 内容 “””</li></ol><p>三引号定义和多行注释写法一样，同样支持换行操作。</p><p>使用变量接受就是字符串。</p><p>不使用变量接受，就是多行注释。</p><h2 id="字符串本身包含-“-”-’-‘"><a href="#字符串本身包含-“-”-’-‘" class="headerlink" title="字符串本身包含 “ ” ’ ‘"></a>字符串本身包含 “ ” ’ ‘</h2><p>单引号定义：可以内含双引号</p><p>双引号定义：可以内含单引号</p><p>可以使用转义字符 \ 解除引号效果，变为普通字符串</p><blockquote><p>强烈建议用双引号定义字符串内容，尽量避免单引号</p></blockquote><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><p>如果我们有两个字符串，可以将其拼接成-一个字符串，通过+号即可完成，如: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;编程语言&quot;</span>+<span class="string">&quot;Python&quot;</span>)</span><br></pre></td></tr></table></figure><p>不过一般，单纯的2个字符串字面量进行拼接显得很呆，-般，字面量和变量或变量和变量之间会使用拼接，如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = Python</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;现在是&quot;</span> + name + <span class="string">&quot;语言&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注:无法和非字符串类型（int、float等）进行拼接</p></blockquote><h2 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h2><h3 id="常规格式化"><a href="#常规格式化" class="headerlink" title="常规格式化"></a>常规格式化</h3><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot; %占位符 &quot; % 变量 </span><br><span class="line">&quot; %占位符1%占位符2%占位符3 &quot; % （变量1, 变量2,变量3)</span><br></pre></td></tr></table></figure><blockquote><p>多个占位符之间可以没有东西间隔，占据占位符的变量之间要用  ，  间隔</p></blockquote><table><thead><tr><th>格式符号</th><th>转化</th></tr></thead><tbody><tr><td>%s</td><td>将内容转为字符串，放入占位位置</td></tr><tr><td>%d</td><td>将内容转为整数，放入占位位置</td></tr><tr><td>%f</td><td>将内容转为浮点数，放入占位位置</td></tr></tbody></table><blockquote><p>%s：</p><ul><li><p>%：表示要占位</p></li><li><p>s：表示将变量变成字符串放入占位的地方</p></li></ul></blockquote><h3 id="快速格式化"><a href="#快速格式化" class="headerlink" title="快速格式化"></a>快速格式化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f&quot;内容&#123;变量1&#125;...&#123;变量n&#125;&quot;</span><br></pre></td></tr></table></figure><blockquote><p>这种方式：不理会类型，不做精度控制</p></blockquote><h3 id="表达式格式化"><a href="#表达式格式化" class="headerlink" title="表达式格式化"></a>表达式格式化</h3><p>表达式：一条具有明确执行结果的代码语句</p><p>如：数学计算式、变量定义…有具体的结果的代码语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print（&quot; 1+1 的结果是：%d&quot;%( 1+1 )）</span><br><span class="line">print（f&quot; 1+1 的结果是：%d&quot;%&#123; 1+1 &#125;）</span><br><span class="line">print(&quot;字符串在Python中的类型是: %s&quot; % type(&#x27;字符串&#x27;))</span><br></pre></td></tr></table></figure><h2 id="数字精度控制"><a href="#数字精度控制" class="headerlink" title="数字精度控制"></a>数字精度控制</h2><p>使用辅助符号 “m.n” 来控制数据的宽度和精度</p><ul><li>m，控制宽度，要求是数字（很少使用）,设置的宽度小于数字自身，不生效</li><li>.n（注意是 .n ），控制小数点精度，要求是数字，会进行小数的四舍五入</li></ul><p>示例：</p><ul><li><p>%5d：表示将整数的宽度控制在5位，如数字11，被设置为5d，就会变成：   11，用三个空格补足宽度。</p></li><li><p>%5.2f：表示将宽度控制为5，将小数点精度设置为2</p></li></ul><p>小数点和小数部分也算入宽度计算。</p><ul><li>对11.345设置了%7.2f 后，整数部分限制4位精度后，结果是：  11.35。2个空格补足宽度。小数部分限制2位精度后，四舍五入为 .35</li><li>%.2f：表示不限制宽度，只设置小数点精度为2，如11.345设置%.2f后，结果是11.35</li></ul><h1 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h1><p>数据输入：input</p><p>语法：input()语句从键盘获取输入，使用一个变量接收input语句获取的键盘输入数据，变量 &#x3D; input()</p><p>input()语句可以在要求使用者输入内容前，输出提示内容，变量 &#x3D; input(“提示内容”)</p><blockquote><p>input 仅能输入字符串数据</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门</title>
      <link href="/2023/02/22/Python1/"/>
      <url>/2023/02/22/Python1/</url>
      
        <content type="html"><![CDATA[<h1 id="一-初始Python"><a href="#一-初始Python" class="headerlink" title="一.初始Python"></a>一.初始Python</h1><h2 id="1-Python安装"><a href="#1-Python安装" class="headerlink" title="1. Python安装"></a>1. Python安装</h2><p>Python官网：<a href="https://www.python.org/">https://www.python.org/</a></p><p>点击download下载</p><p><a href="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221205810.png">https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221205810.png</a></p><p><a href="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221210948.png">https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221210948.png</a></p><p>将下面的√，√上，图中我的已勾选，接着傻瓜式安装</p><p>如果没有勾选，在用命令提示符运行Python可能出现</p><p><a href="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221212539.png">https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221212539.png</a></p><p>出现该问题，重新安装Python即可</p><h2 id="2-第一个Python程序"><a href="#2-第一个Python程序" class="headerlink" title="2. 第一个Python程序"></a>2. 第一个Python程序</h2><p>老规矩，hello world</p><p><a href="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221212007.png">https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221212007.png</a></p><p><a href="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221215926.png">https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221215926.png</a></p><blockquote><p>编程语言中的符号记得纯英文</p></blockquote><h2 id="3-Python解释器"><a href="#3-Python解释器" class="headerlink" title="3. Python解释器"></a>3. Python解释器</h2><p>Python解释器是一个计算机程序，用来翻译Python程序并提交给计算机执行。</p><p>它的功能简单：</p><ul><li>翻译代码</li><li>提交给计算机运行</li></ul><p>.py文件：让Python解释器运行的文件</p><h2 id="4-Python开发环境"><a href="#4-Python开发环境" class="headerlink" title="4. Python开发环境"></a>4. Python开发环境</h2><p>Python开发程序常见的有：</p><ul><li>Python解释器环境内，执行单元代码</li><li>使用Python解释器程序，执行Python代码文件（ .py文件）</li><li><strong>都用第三方IDE(集成开发工具)，如PyCharm</strong></li></ul><p>PyCharm是当下全球Python开发最主流的工具</p><p>PyCharm官网：<a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a></p><p>PyCharm快捷键：</p><ul><li>ctrl + alt + s：打开软件设置</li><li>ctrl + d：复制当前代码</li><li>shift + alt +  上|下：将当前代码上 | 下移</li><li>ctrl + shift + f10：运行当前代码</li><li>shift + f6 ：重命名文件</li><li>ctrl + a|c|v|x|f：复制、黏贴、剪切、搜索</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>至每一个来到这里的人</title>
      <link href="/2023/02/22/hello-world/"/>
      <url>/2023/02/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p><a href="https://raw.githubusercontent.com/icyhalo/picgo/main/TEHSN5228DVNJ0IKG8LMEF5.jpg">https://raw.githubusercontent.com/icyhalo/picgo/main/TEHSN5228DVNJ0IKG8LMEF5.jpg</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
