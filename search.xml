<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS三大特性、盒子模型</title>
      <link href="/2023/03/16/CSS.3/"/>
      <url>/2023/03/16/CSS.3/</url>
      
        <content type="html"><![CDATA[<h1 id="一、CSS三大特性"><a href="#一、CSS三大特性" class="headerlink" title="一、CSS三大特性"></a>一、CSS三大特性</h1><h2 id="1-层叠性"><a href="#1-层叠性" class="headerlink" title="1 层叠性"></a>1 层叠性</h2><p>​相同选择器给设置相同的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式冲突的问题</p><p>层叠性原则:</p><ul><li>样式冲突，遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230316133724.png"></p><h2 id="2-继承性"><a href="#2-继承性" class="headerlink" title="2 继承性"></a>2 继承性</h2><p>​CSS中的继承: 子标签会继承父标签的某些样式，如文本颜色和字号。恰当地使用继承可以简化代码，降低 CSS 样式的复杂性。</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230316133811.png"></p><p>子元素可以继承父元素的样式</p><blockquote><p>text-，font-，line-这些元素开头的可以继承，以及color属性</p></blockquote><p><strong>行高的继承性：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>:<span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>行高可以跟单位也可以不跟单位</li><li>如果子元素没有设置行高，则会继承父元素的行高为 1.5</li><li>此时子元素的行高是：当前子元素的文字大小 * 1.5</li><li>body 行高 1.5  这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高</li></ul><h2 id="3-优先级"><a href="#3-优先级" class="headerlink" title="3 优先级"></a>3 优先级</h2><p>当同一个元素指定多个选择器，就会有优先级的产生。</p><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，则根据选择器权重执行</li></ul><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者 *</td><td>0,0,0,0</td></tr><tr><td>元索选择器</td><td>0,0,0,1</td></tr><tr><td>类选择器，伪类选择器</td><td>0,0,1,0</td></tr><tr><td>ID选择器</td><td>0,1,0,0</td></tr><tr><td>行内样式 style</td><td>1,0,0,0</td></tr><tr><td>！important</td><td>无穷大</td></tr></tbody></table><p><strong>优先级注意点:</strong></p><ol><li><p>权重是有4组数字组成,但是不会有进位。</p></li><li><p>可以理解为类选择器永远大于元素选择器, id选择器永远大于类选择器,以此类推..</p></li><li><p>等级判断从左向右，如果某一位数值相同，则判断下一位数值。</p></li><li><p>可以简单记忆法:  通配符和继承权重为0, 标签选择器为1,类(伪类)选择器为 10, id选择器 100, 行内样式表为 1000, !important 无穷大.</p></li><li><p>继承的权重是0， 如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是 0。</p></li></ol><p><strong>权重叠加</strong>：如果是复合选择器，则会有权重叠加，需要计算权重，<strong>不会有进位</strong>，比较高位</p><h1 id="二、盒子模型"><a href="#二、盒子模型" class="headerlink" title="二、盒子模型"></a>二、盒子模型</h1><h2 id="1-网页布局的本质"><a href="#1-网页布局的本质" class="headerlink" title="1 网页布局的本质"></a>1 网页布局的本质</h2><p>网页布局的核心本质： 就是利用 CSS 摆盒子。</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230316204419.png"></p><p>网页布局过程：</p><ol><li>先准备好相关的网页元素，网页元素基本都是盒子 Box 。</li><li>利用 CSS 设置好盒子样式，然后摆放到相应位置。</li><li>往盒子里面装内容</li></ol><h2 id="2-盒子模型（Box-Model）组成"><a href="#2-盒子模型（Box-Model）组成" class="headerlink" title="2 盒子模型（Box Model）组成"></a>2 盒子模型（Box Model）组成</h2><p>​盒子模型：把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p><p>​CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：<strong>边框</strong>、<strong>外边距</strong>、<strong>内边距</strong>、和 <strong>实际内容</strong></p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230316204449.png"></p><h2 id="3、边框（border）"><a href="#3、边框（border）" class="headerlink" title="3、边框（border）"></a>3、边框（border）</h2><h3 id="3-1、边框的使用"><a href="#3-1、边框的使用" class="headerlink" title="3.1、边框的使用"></a>3.1、边框的使用</h3><p>边框有三部分组成：边框宽度(粗细) 边框样式  边框颜色；</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span> : border-width || border-style || border-color;   </span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>border-width</td><td>边框粗细</td></tr><tr><td>border-style</td><td>边框的样式</td></tr><tr><td>border-color</td><td>边框颜色</td></tr></tbody></table><p>边框样式 border-style 可以设置如下值：</p><ul><li>none：没有边框即忽略所有边框的宽度（默认值）</li><li>solid：边框为单实线(最为常用的)</li><li>dashed：边框为虚线  </li><li>dotted：边框为点线</li></ul><p>边框简写：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;  </span><br></pre></td></tr></table></figure><blockquote><p>边框简写不分顺序</p></blockquote><p>边框分开写法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red;  <span class="comment">/* 只设定上边框， 其余同理 */</span>   </span><br></pre></td></tr></table></figure><blockquote><p>某一边单独写注意覆盖问题</p></blockquote><h3 id="3-2-表格的细线边框"><a href="#3-2-表格的细线边框" class="headerlink" title="3.2 表格的细线边框"></a>3.2 表格的细线边框</h3><p>border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>:collapse; </span><br></pre></td></tr></table></figure><p>collapse 单词是合并的意思</p><p>border-collapse: collapse; 表示相邻边框合并在一起</p><h3 id="3-3-边框会影响盒子实际大小"><a href="#3-3-边框会影响盒子实际大小" class="headerlink" title="3.3 边框会影响盒子实际大小"></a>3.3 边框会影响盒子实际大小</h3><p>边框会额外增加盒子的实际大小。因此我们有两种方案解决：</p><ul><li>测量盒子大小的时候,不量边框。</li><li>如果测量的时候包含了边框,则需要 width&#x2F;height 减去边框宽度</li></ul><h2 id="4-内边距（padding）"><a href="#4-内边距（padding）" class="headerlink" title="4 内边距（padding）"></a>4 内边距（padding）</h2><h3 id="4-1-内边距的使用方式"><a href="#4-1-内边距的使用方式" class="headerlink" title="4.1 内边距的使用方式"></a>4.1 内边距的使用方式</h3><p>padding 属性用于设置内边距，即边框与内容之间的距离。</p><p>语法：</p><p>合写属性：</p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>padding: 5px;</td><td>1个值，代表上下左右都是5像索内边距</td></tr><tr><td>padding: 5px 10px;</td><td>2个值，代表上下内边距是5像素，左右内边距是10像索</td></tr><tr><td>padding: 5px 10px 20px;</td><td>3个值，代表上内边距5像素，左右内边距10像素，下内边距20像素</td></tr><tr><td>padding: 5px 10px 20px 30px;</td><td>4个值，上是5像素，右10像素，下20像素，左是30像素，顺时针</td></tr></tbody></table><p>分写属性：</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>padding-left</td><td>左内边距</td></tr><tr><td>padding-right</td><td>右内边距</td></tr><tr><td>padding-top</td><td>上内边距</td></tr><tr><td>padding- bottom</td><td>下内边距</td></tr></tbody></table><h3 id="4-2-内边距会影响盒子实际大小"><a href="#4-2-内边距会影响盒子实际大小" class="headerlink" title="4.2 内边距会影响盒子实际大小"></a>4.2 内边距会影响盒子实际大小</h3><p>当我们给盒子指定 padding 值之后，发生了 2 件事情：</p><ol><li>内容和边框有了距离，添加了内边距。</li><li>padding影响了盒子实际大小。</li></ol><p>内边距对盒子大小的影响：</p><ul><li>如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。</li><li>如何盒子本身没有指定width&#x2F;height属性, 则此时padding不会撑开盒子大小。</li></ul><p>解决方案：如果保证盒子跟效果图大小保持一致，则让 width&#x2F;height 减去多出来的内边距大小即可。</p><h2 id="5-外边距（margin）"><a href="#5-外边距（margin）" class="headerlink" title="5 外边距（margin）"></a>5 外边距（margin）</h2><h3 id="5-1-外边距的使用方式"><a href="#5-1-外边距的使用方式" class="headerlink" title="5.1 外边距的使用方式"></a>5.1 外边距的使用方式</h3><p>margin 属性用于设置外边距，即控制盒子和盒子之间的距离。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>margin-left</td><td>左外边距</td></tr><tr><td>margin-right</td><td>右外边距</td></tr><tr><td>margin-top</td><td>上外边距</td></tr><tr><td>margin-bottom</td><td>下外边距</td></tr></tbody></table><h3 id="5-2-外边距典型应用"><a href="#5-2-外边距典型应用" class="headerlink" title="5.2 外边距典型应用"></a>5.2 外边距典型应用</h3><p>外边距可以让块级盒子水平居中的两个条件：</p><ul><li>盒子必须指定了宽度（width）。</li><li>盒子左右的外边距都设置为 auto 。</li></ul><p>常见的写法，以下三种都可以：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin-left</span>: auto;   <span class="attribute">margin-right</span>: auto;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br></pre></td></tr></table></figure><blockquote><p>注意：以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 text-align : center 即可。</p></blockquote><h3 id="5-3-外边距合并"><a href="#5-3-外边距合并" class="headerlink" title="5.3 外边距合并"></a>5.3 外边距合并</h3><p>使用 margin 定义块元素的垂直外边距时，可能会出现外边距的合并。</p><p>主要有两种情况:</p><ol><li>相邻块元素垂直外边距的合并</li></ol><p>​当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top ，则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并。</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230316205753.png"></p><p>解决方案：尽量只给一个盒子添加 margin 值。</p><ol start="2"><li>嵌套块元素垂直外边距的塌陷</li></ol><p>​        对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230316205909.png"></p><p>解决方案：</p><ul><li>可以为父元素定义上边框。</li><li>可以为父元素定义上内边距。</li><li>可以为父元素添加 overflow : hidden</li></ul><h3 id="5-4-清除内外边距"><a href="#5-4-清除内外边距" class="headerlink" title="5.4 清除内外边距"></a>5.4 清除内外边距</h3><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">   <span class="attribute">padding</span>:<span class="number">0</span>;   <span class="comment">/* 清除内边距 */</span></span><br><span class="line">   <span class="attribute">margin</span>:<span class="number">0</span>;    <span class="comment">/* 清除外边距 */</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>emmet语法、CSS简介、引入</title>
      <link href="/2023/03/15/CSS.0/"/>
      <url>/2023/03/15/CSS.0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、emmet语法"><a href="#一、emmet语法" class="headerlink" title="一、emmet语法"></a>一、emmet语法</h1><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>​        Emmet语法的前身是Zen coding,它使用缩写,来提高html&#x2F;css的编写速度, Vscode内部已经集成该语法。</p><ul><li>快速生成HTML结构语法</li><li>快速生成CSS样式语法</li></ul><h2 id="2、快速生成HTML结构语法"><a href="#2、快速生成HTML结构语法" class="headerlink" title="2、快速生成HTML结构语法"></a>2、快速生成HTML结构语法</h2><ul><li>生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 &lt; div&gt;&lt;&#x2F; div&gt;</li><li>如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div</li><li>如果有父子级关系的标签，可以用 &gt;  比如   ul &gt; li就可以了</li><li>如果有兄弟关系的标签，用  +  就可以了 比如 div+p  </li><li>如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了</li><li>如果生成的div 类名是有顺序的， 可以用 自增符号  $ </li><li>如果想要在生成的标签内部写内容可以用  { }  表示</li></ul><h2 id="3、快速生成CSS样式语法"><a href="#3、快速生成CSS样式语法" class="headerlink" title="3、快速生成CSS样式语法"></a>3、快速生成CSS样式语法</h2><p>CSS 基本采取简写形式即可</p><p>​        比如 w200   按tab  可以 生成  width: 200px;</p><p>​        比如 lh26px   按tab  可以生成  line-height: 26px;</p><h1 id="二、CSS简介"><a href="#二、CSS简介" class="headerlink" title="二、CSS简介"></a>二、CSS简介</h1><p><strong>CSS 的主要使用场景就是布局网页，美化页面的。</strong></p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230311153410.png"></p><h2 id="1-HTML的局限性"><a href="#1-HTML的局限性" class="headerlink" title="1 HTML的局限性"></a>1 HTML的局限性</h2><p>HTML 只关注内容的语义，虽然 HTML 可以做简单的样式，但是带来的是无尽的臃肿、繁琐和难以维护……</p><h2 id="2-CSS作用"><a href="#2-CSS作用" class="headerlink" title="2 CSS作用"></a>2 CSS作用</h2><p>CSS 是 <code>层叠样式表</code> 的简称。</p><p>有时我们也会称之为 <code>CSS样式表</code> 或 <code>级联样式表</code>。</p><p>CSS 也是一种 <code>标记语言</code>。</p><p>CSS 主要用于设置：</p><ul><li>HTML 页面中的文本样式（字体、大小、颜色、对齐方式……）</li><li>图片样式（宽高、边框样式、边距……）</li><li>以及版面的布局和外观显示样式。</li></ul><p>CSS 让我们的网页更加丰富多彩，布局更加灵活自如，简单理解：CSS 可以美化 HTML，让 HTML 更漂亮，同时让页面布局更简单。</p><p><strong>总结：</strong></p><ul><li>HTML 搭建结构，填入元素内容</li><li>CSS 美化 HTML，布局网页元素</li><li>CSS 最大价值：由 HTML 专注去做结构呈现，样式交给 CSS，即：<strong>结构与样式分离</strong></li></ul><h2 id="3-CSS语法规范"><a href="#3-CSS语法规范" class="headerlink" title="3 CSS语法规范"></a>3 CSS语法规范</h2><p>使用 HTML 时，需要遵从一定的规范，CSS 也是如此，要想熟练地使用 CSS 对网页进行修饰，首先需要了解 CSS 样式规则。</p><p>CSS 规则由两个主要的部分构成：<code>选择器</code> 以及 <code>一条或多条声明</code>。</p><ul><li><code>选择器</code> 是用于选出需要设置 CSS 样式的 HTML 标签，选择器后跟的<strong>花括号</strong>内是对该对象设置的具体样式</li><li><code>属性</code> 和 <code>属性值</code> 以 “键值对” 的形式出现 <code>属性: 属性值;</code></li><li>属性是对指定的对象设置的样式属性，例如：字体大小、文本颜色等</li><li>属性和属性值之间用英文 <code>:</code> 分开</li><li>多个 “键值对” 之间用英文 <code>;</code> 进行区分（末尾的键值对可以不加 <code>;</code>）</li></ul><p>所有的样式，都包含在 <code>&lt;style&gt;</code> 标签内，表示是样式表。</p><p><code>&lt;style&gt;</code> 一般写到 <code>&lt;/head&gt;</code> 里。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h4</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: bule;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：<code>&lt;style&gt;</code> 标签可以写到其他标签内部并作用与该标签区域内，但是强烈不推荐这种写法！</p><blockquote><p>目前 <code>type=&quot;text/css&quot;</code> 可以省略。</p></blockquote><h2 id="4-CSS代码风格"><a href="#4-CSS代码风格" class="headerlink" title="4 CSS代码风格"></a>4 CSS代码风格</h2><h3 id="4-1-样式格式书写"><a href="#4-1-样式格式书写" class="headerlink" title="4.1 样式格式书写"></a>4.1 样式格式书写</h3><ul><li>紧凑格式（不推荐）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink; <span class="attribute">font-size</span>: <span class="number">20px</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>展开格式（<strong>推荐</strong>）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: deeppink;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强烈推荐第二种格式，因为更直观！不用担心占用空间，因为后期可以通过代码压缩工具来压缩代码。</p><h3 id="4-2-样式大小书写"><a href="#4-2-样式大小书写" class="headerlink" title="4.2 样式大小书写"></a>4.2 样式大小书写</h3><ul><li>大写（不推荐）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">H3</span> &#123;</span><br><span class="line">    <span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>小写（<strong>推荐</strong>）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强烈推荐样式选择器，属性名，属性值关键字<strong>全部使用小写字母</strong>，特殊情况除外。</p><blockquote><p>凡是你不确定是否用大写的都一律用小写就对了！</p></blockquote><h3 id="4-3-空格规范"><a href="#4-3-空格规范" class="headerlink" title="4.3 空格规范"></a>4.3 空格规范</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>属性值前面</strong>，<strong>冒号后面</strong>，保留一个空格</li><li><strong>选择器（标签）和前花括号中间</strong>，保留一个空格</li></ul><h1 id="三、CSS引入方式"><a href="#三、CSS引入方式" class="headerlink" title="三、CSS引入方式"></a>三、CSS引入方式</h1><h2 id="1-CSS的三种引入方式"><a href="#1-CSS的三种引入方式" class="headerlink" title="1 CSS的三种引入方式"></a>1 CSS的三种引入方式</h2><p>按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：</p><ul><li><strong>内嵌式</strong>：CSS 写在style标签中</li></ul><blockquote><p>style标签虽然可以写在页面任意位置，但是通常约定写在 head 标签中</p></blockquote><ul><li><strong>外联式</strong>：CSS 写在一个单独的.css文件中</li></ul><blockquote><p>需要通过link标签在网页中引入</p></blockquote><ul><li><strong>行内式</strong>：CSS 写在标签的style属性中</li></ul><blockquote><p>配合js使用</p></blockquote><table><thead><tr><th>引入方式</th><th>书写位置</th><th>作用范围</th><th>使用场景</th></tr></thead><tbody><tr><td>内嵌式</td><td>CSS写在style标签中</td><td>当前页面</td><td>小案例</td></tr><tr><td>外联式</td><td>CSS写在单独的css文件中，通过link标签引入</td><td>多个页面</td><td>项目中</td></tr><tr><td>行内式</td><td>CSS写在标签的style属性中</td><td>当前标签</td><td>配合js使用</td></tr></tbody></table><h2 id="2-内嵌式"><a href="#2-内嵌式" class="headerlink" title="2 内嵌式"></a>2 内嵌式</h2><p>内部样式表（嵌入样式表）时写到 HTML 页面内部，是将所有的 CSS 代码抽取出来，单独放到一个 <code>&lt;style&gt;</code> 标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般会放到文档的 <code>&lt;head&gt;</code> 标签中</li><li>目前的浏览器已经支持<strong>省略</strong> <code>type</code> <strong>属性</strong></li><li>通过此种方式，可以方便控制当前整个页面中的元素样式设置</li><li>代码结构清晰，但是并没有实现结构与样式完全分离</li><li>使用内部样式表设定 CSS，通常也被称为 <code>嵌入式引入</code>，这种方式是我们练习时常用的方式</li></ul><h2 id="3-外联式"><a href="#3-外联式" class="headerlink" title="3 外联式"></a>3 外联式</h2><p>实际开发都是外部样式表，适合于样式比较多的情况，核心是：样式单独写到 CSS 文件中，之后把 CSS 文件引入到 HTML 页面中使用。</p><p>引入外部样式表分为两步：</p><ul><li>新建一个后缀名为：<code>.css</code> 的样式文件，把所有的 CSS 代码都放入此文件中</li><li>在 HTML 页面中，使用 <code>&lt;link&gt;</code> 标签引入这个文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>rel</code></td><td>定义当前文档与被链接文档之间的关系，在这里**需要指定为 “stylesheet”**，表示被链接的文档是一个样式表文件</td></tr><tr><td><code>type</code></td><td>定义被链接文档的 MIME 类型，该属性最常见的 MIME 类型是 “text&#x2F;css”，该类型描述样式表，目前的浏览器<strong>已经支持省略 “type” 属性</strong></td></tr><tr><td><code>href</code></td><td>定义所链接外部样式表文件的 URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><blockquote><p><strong>注意：</strong>使用外部样式表设定 CSS，通常也被称为 <code>外链式</code> 或 <code>链接式引入</code>，这种方式是开发中常用的方式。</p></blockquote><h2 id="4-行内式"><a href="#4-行内式" class="headerlink" title="4 行内式"></a>4 行内式</h2><p>行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>style</code> 其实就是标签的属性</li><li>在双引号中间，写法要符合 CSS 规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用</li><li>使用行内样式表设定 CSS，通常也被称为 <code>行内式引入</code></li></ul><h1 id="四、CSS-的元素显示模式"><a href="#四、CSS-的元素显示模式" class="headerlink" title="四、CSS 的元素显示模式"></a>四、CSS 的元素显示模式</h1><h2 id="1-什么是元素显示模式"><a href="#1-什么是元素显示模式" class="headerlink" title="1 什么是元素显示模式"></a>1 什么是元素显示模式</h2><p><strong>作用：</strong>网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页。</p><p><code>元素显示模式</code> 就是元素（标签）以什么方式进行显示，比如 <code>&lt;div&gt;</code> 自己占一行，比如一行可以放多个 <code>&lt;span&gt;</code>。</p><p>HTML 元素一般分为 <code>块元素</code> 和 <code>行内元素</code> 两种类型。</p><h2 id="2-块元素"><a href="#2-块元素" class="headerlink" title="2 块元素"></a>2 块元素</h2><p>常见的块元素有 <code>&lt;h1&gt; ~ &lt;h6&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;div&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>、<code>&lt;dl&gt;</code>、<code>&lt;dt&gt;</code>、<code>&lt;dd&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;thead&gt;</code>、<code>&lt;tbody&gt;</code>、<code>&lt;tr&gt;</code>、<code>&lt;form&gt;</code> 等，其中 <code>&lt;div&gt;</code> 标签是最典型的块元素。</p><p><strong>块级元素的特点：</strong></p><ul><li>比较霸道，自己独占一行</li><li>高度，宽度、外边距以及内边距都可以控制</li><li>宽度默认是容器（父级宽度）的 100%</li><li>是一个容器及盒子，里面可以放行内或者块级元素</li></ul><p><strong>注意：</strong></p><ul><li>文字类的块级元素内不能放置块级元素，会发生语法错误</li><li><code>&lt;p&gt;</code> 标签主要用于存放文字，因此 <code>&lt;p&gt;</code> 里面不能放块级元素，特别是不能放 <code>&lt;div&gt;</code></li><li>同理， <code>&lt;h1&gt; ~ &lt;h6&gt;</code> 等都是文字类块级标签，里面也不能放其他块级元素</li></ul><h2 id="3-行内元素"><a href="#3-行内元素" class="headerlink" title="3 行内元素"></a>3 行内元素</h2><p>常见的行内元素有 <code>&lt;a&gt;</code>、<code>&lt;span&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;strong&gt;</code> 等，其中 <code>&lt;span&gt;</code> 标签是最典型的行内元素，有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><ul><li><p>相邻行内元素在一行上，一行可以显示多个</p></li><li><p>高、宽直接设置是无效的</p></li><li><p>默认宽度就是它本身内容的宽度</p></li><li><p>行内元素只能容纳文本或其他行内元素（a 除外）</p></li></ul><p><strong>注意：</strong></p><ul><li>链接里面不能再放链接</li><li>特殊情况链接 <code>&lt;a&gt;</code> 里面可以放块级元素，但是给 <code>&lt;a&gt;</code> 转换一下块级模式最安全</li></ul><h2 id="4-行内块元素"><a href="#4-行内块元素" class="headerlink" title="4 行内块元素"></a>4 行内块元素</h2><p>在行内元素中有几个特殊的标签：<code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;th&gt;</code>、<code>&lt;td&gt;</code>，它们同时具有 <code>块元素</code> 和 <code>行内元素</code> 的特点，有些资料称它们为 <code>行内块元素</code>。</p><p><strong>行内块元素的特点：</strong></p><ul><li>和相邻行内元素（行内块）在一行上，一行可以显示多个（行内元素特点），但是他们之间会有空白缝隙。</li><li>默认宽度就是它本身内容的宽度（行内元素特点）</li><li>高度，行高、外边距以及内边距都可以控制（块级元素特点）</li></ul><h2 id="5-元素显示模式总结"><a href="#5-元素显示模式总结" class="headerlink" title="5 元素显示模式总结"></a>5 元素显示模式总结</h2><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度和高度</td><td>容器的 100%</td><td>容量级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以直接设置宽度和高度</td><td>它本身内容的宽度</td><td>容纳文本或其他行内元素</td></tr><tr><td>行内块元素</td><td>一行放多个行内块元素</td><td>可以设置宽度和高度</td><td>它本身内容的宽度</td><td>容纳文本或其他行内元素</td></tr></tbody></table><p>学习元素显示模式的主要目的是分清它们各自的特点，当我们网页布局的时候，在合适的地方用合适的标签元素。</p><h2 id="6-元素显示模式转换"><a href="#6-元素显示模式转换" class="headerlink" title="6 元素显示模式转换"></a>6 元素显示模式转换</h2><p>特殊情况下，我们需要元素模式的转换，简单理解: 一个模式的元素需要另外一种模式的特性</p><p>比如：想要增加链接 <code>&lt;a&gt;</code> 的触发范围。</p><ul><li>转换为块元素：<code>display: block;</code>（由于经常需要设置宽高，所以通常会将行内元素转换为块元素）</li><li>转换为行内元素：<code>display: inline;</code>（不常用）</li><li>转换为行内块：<code>display: inline-block;</code>（常用）</li></ul><h2 id="7-小技巧：单行文字垂直居中"><a href="#7-小技巧：单行文字垂直居中" class="headerlink" title="7 小技巧：单行文字垂直居中"></a>7 小技巧：单行文字垂直居中</h2><p>CSS 没有给我们提供文字垂直居中的代码，这里我们可以使用一个小技巧来实现。</p><p><strong>解决方案：</strong>让 <code>文字的行高</code> 等于 <code>盒子的高度</code> 就可以让文字在当前盒子内垂直居中。</p><p><strong>简单理解：</strong>行高的上空隙和下空隙把文字挤到中间了，如果行高小于盒子高度，文字会偏上，如果行高大于盒子高度，则文字偏下。</p><h2 id="8-一个注意点：块级元素不会自动换行"><a href="#8-一个注意点：块级元素不会自动换行" class="headerlink" title="8 一个注意点：块级元素不会自动换行"></a>8 一个注意点：块级元素不会自动换行</h2><p>当块级元素的宽度超过其父元素宽度时，其不会发生换行。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-复合选择器、元素显示模式、背景</title>
      <link href="/2023/03/15/CSS.2/"/>
      <url>/2023/03/15/CSS.2/</url>
      
        <content type="html"><![CDATA[<h1 id="一、CSS字体属性"><a href="#一、CSS字体属性" class="headerlink" title="一、CSS字体属性"></a>一、CSS字体属性</h1><p>CSS Fonts（字体）属性用于定义：<code>字体系列</code>、<code>大小</code>、<code>粗细</code>、和 <code>文字样式</code>（如：斜体）。</p><h2 id="1-字体系列"><a href="#1-字体系列" class="headerlink" title="1 字体系列"></a>1 字体系列</h2><p>CSS 使用 font-family 属性定义文本的字体系列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>; &#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">font-family</span>: Arial, <span class="string">&quot;Microsoft YaHei&quot;</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下，如果有空格隔开的多个单词组成的字体，加引号，如 ‘Microsoft YaHei ‘</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常用的字体：<code>body &#123;font-family: &quot;Microsoft YaHei&quot;, tahoma, arial, sans-serif, &quot;Hiragino Sans GB&quot;;&#125;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 浏览器会从第一个字体开始进行适配，如果本机可以适配的话，那么就使用该字体，否则看下一个字体，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">       如果都不可以，那么浏览器会使用自带的默认字体，所以实际开发中一般建议使用比较标准化的字体 */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>, Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: <span class="string">&quot;Times New Roman&quot;</span>, Times, serif;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：浏览器字体是依据用户操作系统来调用的，所以这里介绍一种 Windows 系统安装字体的方法。</p><blockquote><p>当然实际开发中通常浏览器请求时，会把字体文件随 HTML CSS JS 等一同传送到客服端。</p></blockquote><h2 id="2-字体大小"><a href="#2-字体大小" class="headerlink" title="2 字体大小"></a>2 字体大小</h2><p>CSS 使用 font-size 属性定义字体大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px（像素）大小是我们网页的最常用的单位（不加 px 无效）</li><li>谷歌浏览器默认的文字大小为：16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小</li><li>可以给 body 指定整个页面文字的大小4.3 字体粗细</li></ul><h2 id="3-字体粗细"><a href="#3-字体粗细" class="headerlink" title="3 字体粗细"></a>3 字体粗细</h2><p>CSS 使用 font-weight 属性设置文本字体的粗细。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>normal</code></td><td>默认值（不加粗的）</td></tr><tr><td><code>bold</code></td><td>定义粗体（加粗的）</td></tr><tr><td><code>100-900</code></td><td>400 等同于 normal，而 700 等同于 bold，其它值一般不使用，注意这个数字后面不跟单位，取整百值</td></tr></tbody></table><ul><li>学会让加粗标签（比如 h 和 strong 等）变为不加粗，或者让其他标签加粗</li><li>实际开发时，我们更喜欢用数字表示粗细</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bold</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 使文字不加粗 */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* font-weight: normal; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-文字样式"><a href="#4-文字样式" class="headerlink" title="4 文字样式"></a>4 文字样式</h2><p>CSS 使用 font-style 属性设置文本的风格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: italic; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td><code>normal</code></td><td>默认值，浏览器会显示标准的字体样式 font-style: normal;</td></tr><tr><td><code>italic</code></td><td>浏览器会显示斜体的字体样式</td></tr></tbody></table><p><strong>注意：</strong>平时我们很少给文字加斜体，反而要给斜体标签 (em、i) 改为不倾斜字体。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 让不倾斜的字体倾斜 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">em</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 让倾斜的字体不倾斜 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-style</span>: normal;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>上课时候的你<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>下课时候的你<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-字体复合属性"><a href="#5-字体复合属性" class="headerlink" title="5 字体复合属性"></a>5 字体复合属性</h2><p>字体属性可以把以上文字样式综合来写，这样可以更节约代码。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#模板</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: font-style font-weight font-size/line-height font-family;</span><br><span class="line">&#125;</span><br><span class="line">#例</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">400</span> font-size/line-height <span class="string">&quot;Microsoft YaHei&quot;</span>, Arial, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用 font 属性时，<strong>必须按上面语法格式中的顺序书写，不能更换顺序</strong>，并且各个属性间以空格隔开</li><li>不需要设置的属性可以省略（取默认值），但必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 想要 div 文字变倾斜、加粗、字号设置为 16 像素，并且是微软雅黑 */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 复合属性：简写的方式，里面的顺序不能打乱 以空格隔开 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* font: font-style font-weight font-size/line-height font-family; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">font</span>: italic <span class="number">700</span> <span class="number">16px</span>/<span class="number">20px</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 注意：不需要设置的属性可以省略（取默认值），但必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* font: 20px &#x27;Microsoft YaHei&#x27;； */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>三生三世十里桃花，一心一意百行代码<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-字体属性总结"><a href="#6-字体属性总结" class="headerlink" title="6 字体属性总结"></a>6 字体属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td><code>font-size</code></td><td>字号</td><td>我们通常用的单位是 px 像素，一定要跟上单位</td></tr><tr><td><code>font-family</code></td><td>字体</td><td>实际工作中按照团队约定来写字体</td></tr><tr><td><code>font-weight</code></td><td>字体属性</td><td>记住加粗是 700 或者 bold 不加粗 是 normal 或者 400 记住数字不要跟单位</td></tr><tr><td><code>font-style</code></td><td>字体样式</td><td>记住倾斜是 italic 不倾斜是 normal 工作中我们最常用 normal</td></tr><tr><td><code>font</code></td><td>字体连写</td><td>1、字体连写是有顺序的不能随意换位置，2、其中字号和字体必须同时出现</td></tr></tbody></table><h1 id="二、CSS文本属性"><a href="#二、CSS文本属性" class="headerlink" title="二、CSS文本属性"></a>二、CSS文本属性</h1><p>CSS Text（文本）属性可定义文本的 <code>外观</code>，比如：<code>文本颜色</code>、<code>文本对齐</code>、<code>文本装饰</code>、<code>文本缩进</code>、<code>行间距</code> 等。</p><h2 id="1-文本颜色"><a href="#1-文本颜色" class="headerlink" title="1 文本颜色"></a>1 文本颜色</h2><p><code>color</code> 属性用于定义文本的颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#EE0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示方式</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue，black，white，gray</td></tr><tr><td>十六进制</td><td>#FF0000，#66CCFF，#EE82EE</td></tr><tr><td>RGB 代码</td><td>rgb(255, 0, 0) 或 rgb(100%, 0%, 0%)</td></tr></tbody></table><blockquote><p> <strong>注意：</strong>开发中最常用的是十六进制。 </p></blockquote><blockquote><p>颜色直接吸取，不用记</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* color: deeppink; */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* color: #FF1493; 最常用 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">20</span>, <span class="number">147</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>pink<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-文本对齐"><a href="#2-文本对齐" class="headerlink" title="2 文本对齐"></a>2 文本对齐</h2><p><code>text-align</code> 属性用于设置元素内文本内容的水平对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>left</td><td>左对齐（默认值）</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 本质是让 h1 盒子里面的文字水平居中对齐 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* text-align: center; */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>右对齐的标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>text-align</code> 属性只能作用于 <code>块级元素</code>，并让该块级元素内的 <code>行内元素</code> 实现居中（不一定是文字）。</p></blockquote><h2 id="3-文本装饰"><a href="#3-文本装饰" class="headerlink" title="3 文本装饰"></a>3 文本装饰</h2><p><code>text-decoration</code> 属性规定添加到文本的修饰，可以给文本添加 <code>下划线</code>、<code>删除线</code>、<code>上划线</code> 等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>none</code></td><td>默认，没有装饰线（<strong>最常用</strong>）</td></tr><tr><td><code>underline</code></td><td>下划线，链接 a 自带下划线（常用）</td></tr><tr><td><code>overline</code></td><td>上划线（几乎不用）</td></tr><tr><td><code>line-through</code></td><td>删除线（不常用）</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#66CCFF</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>粉红色的回忆<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://jerry-z-j-r.github.io&quot;</span>&gt;</span>JERRY<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-文本缩进"><a href="#4-文本缩进" class="headerlink" title="4 文本缩进"></a>4 文本缩进</h2><p><code>text-indent</code> 属性用来指定文本的第一行的缩进，通常是将段落的首行缩进。</p><p>通过设置该属性，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>em 是一个相对单位，就是当前元素 (font-size) 1 个文字的大小，如果当前元素没有设置大小，则会按照父元素的 1 个文字大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-行间距（行高）"><a href="#5-行间距（行高）" class="headerlink" title="5 行间距（行高）"></a>5 行间距（行高）</h2><p><code>line-height</code> 属性用于设置行间的距离（行高），可以控制文字行与行之间的距离。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>行间距 = 上间距 + 文本高度 + 下间距</code></p></li><li><p><code>上下间距 = （行间距 - 文本高度）/ 2</code></p></li><li><p><code>文本高度 = font-size</code></p></li></ul><blockquote><p>行高 &#x3D;&#x3D; 容器高度 可实现文本垂直居中</p></blockquote><h2 id="6-文本属性总结"><a href="#6-文本属性总结" class="headerlink" title="6 文本属性总结"></a>6 文本属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td><code>color</code></td><td>文本颜色</td><td>我们通常用 十六进制 而且通常是简写形式 #fff（6 个一样可以简写）</td></tr><tr><td><code>text-align</code></td><td>文本对齐</td><td>可以设定文字水平的对齐方式</td></tr><tr><td><code>text-indent</code></td><td>文本缩进</td><td>通常我们用于段落首行缩进2个字的距离 text-indent: 2em;</td></tr><tr><td><code>text-decoration</code></td><td>文本修饰</td><td>牢记 添加下划线 underline 取消下划线 none</td></tr><tr><td><code>line-height</code></td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h1 id="三、CSS-的背景"><a href="#三、CSS-的背景" class="headerlink" title="三、CSS 的背景"></a>三、CSS 的背景</h1><p>通过 CSS 背景属性，可以给页面元素添加背景样式。<br>背景属性可以设置 <code>背景颜色</code>、<code>背景图片</code>、<code>背景平铺</code>、<code>背景图片位置</code>、<code>背景图像固定</code> 等。</p><h2 id="1-背景颜色"><a href="#1-背景颜色" class="headerlink" title="1 背景颜色"></a>1 背景颜色</h2><p><code>background-color</code> 属性定义了元素的背景颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: 颜色值;</span><br></pre></td></tr></table></figure><p>一般情况下元素背景颜色默认值是 <code>transparent</code>（透明），我们也可以手动指定背景颜色为透明色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: transparent;</span><br></pre></td></tr></table></figure><p>目前 CSS 还支持丰富的渐变色，但是某些浏览器不支持，这里了解即可，具体内容请查阅资料。</p><style>    #grad1 {        height: 200px;        /* 浏览器不支持时显示 */        background-color: red;        /* 线性渐变 - 从上到下（默认情况下）*/        background-image: linear-gradient(#e66465, #9198e5);    }</style><h2 id="2-背景图片"><a href="#2-背景图片" class="headerlink" title="2 背景图片"></a>2 背景图片</h2><p><code>background-image</code> 属性描述了元素的背景图像，实际开发常用于 <strong>logo</strong> 或者一些<strong>装饰性的小图片</strong>或者是<strong>超大的背景图片</strong>, 优点是非常便于控制位置（精灵图也是一种运用场景）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span> : none | <span class="built_in">url</span>(<span class="string">url</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td><code>none</code></td><td>无背景图（默认的）</td></tr><tr><td><code>url</code></td><td>使用绝对或相对地址指定背景图像</td></tr></tbody></table><p>注意：背景图片后面的地址，千万不要忘记加 URL， 同时里面的路径不要加引号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">background-color: pink;</span><br><span class="line">background-image: url(../images/logo.png);</span><br><span class="line">/* 1、背景图片不平铺 */</span><br><span class="line">/* background-repeat: no-repeat; */</span><br><span class="line">/* 2、默认情况下，背景图片是平铺的 */</span><br><span class="line">/* background-repeat: repeat; */ </span><br><span class="line">/* 页面元素既可以添加背景颜色也可以添加背景图片，只不过背景图片区域会覆盖背景颜色 */</span><br></pre></td></tr></table></figure><h2 id="3-背景平铺"><a href="#3-背景平铺" class="headerlink" title="3 背景平铺"></a>3 背景平铺</h2><p>如果需要在 HTML 页面上对背景图像进行平铺，可以使用 <code>background-repeat</code> 属性。</p><p>注：平铺可以简单的理解为“重复”。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat | no-repeat | repeat-x | repeat-y</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td><code>repeat</code></td><td>背景图像在纵向和横向上平铺（默认的）</td></tr><tr><td><code>no-repeat</code></td><td>背景图像不平铺</td></tr><tr><td><code>repeat-x</code></td><td>背景图像在横向上平铺</td></tr><tr><td><code>repeat-y</code></td><td>背景图像在纵向上平铺</td></tr></tbody></table><h2 id="4-背景图片位置"><a href="#4-背景图片位置" class="headerlink" title="4 背景图片位置"></a>4 背景图片位置</h2><p>利用 <code>background-position</code> 属性可以改变图片在背景中的位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y;</span><br></pre></td></tr></table></figure><p>参数代表的意思是：x 坐标 和 y 坐标，可以使用 <code>方位名词</code> 或者 <code>精确单位</code>。</p><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td><code>length</code></td><td>百分数 | 由浮点数字和单位标识符组成的长度值</td></tr><tr><td><code>position</code></td><td>top | center | bottom | left | rigth 方位名词</td></tr></tbody></table><ul><li><p>参数是方位名词</p><ul><li>如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left top 和 top left 效果一致</li><li>如果只指定了一个方位名词，另一个值省略，则<strong>第二个值默认居中对齐</strong></li></ul></li><li><p>参数是精确单位</p><ul><li>如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标</li><li>如果只指定一个数值，那该数值一定是 x 坐标，<strong>另一个默认垂直居中</strong></li></ul></li><li><p>参数是混合单位</p><ul><li>如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标</li></ul></li></ul><h2 id="5-背景图像固定（背景附着）"><a href="#5-背景图像固定（背景附着）" class="headerlink" title="5 背景图像固定（背景附着）"></a>5 背景图像固定（背景附着）</h2><p><code>background-attachment</code> 属性设置背景图像是否固定或者随着页面的其余部分滚动。</p><p><code>background-attachment</code> 后期可以制作 <code>视差滚动</code> 的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span> : scroll | fixed</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>scroll</code></td><td>背景图像是随对象内容滚动的（可见区域取决于背景图像的高度）</td></tr><tr><td><code>fixed</code></td><td>背景图像固定</td></tr></tbody></table><h2 id="6-背景复合写法"><a href="#6-背景复合写法" class="headerlink" title="6 背景复合写法"></a>6 背景复合写法</h2><p>为了简化背景属性的代码，我们可以将这些属性合并简写在同一个属性 <code>background</code> 中，从而节约代码量。</p><p>当使用简写属性时，没有特定的书写顺序，一般习惯约定顺序为：</p><p><code>background</code>: <code>背景颜色</code> <code>背景图片地址</code> <code>背景平铺</code> <code>背景图像滚动</code> <code>背景图片位置</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">image.jpg</span>) no-repeat fixed top;</span><br></pre></td></tr></table></figure><p>这是实际开发中，我们更提倡的写法。</p><h2 id="7-背景色半透明"><a href="#7-背景色半透明" class="headerlink" title="7 背景色半透明"></a>7 背景色半透明</h2><p>CSS3 为我们提供了背景颜色半透明的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br></pre></td></tr></table></figure><ul><li>最后一个参数是 <code>alpha</code> 透明度，取值范围在 <code>0~1</code> 之间</li><li>习惯把 0.3 的 0 省略掉，写为 <code>background: rgba(0, 0, 0, .3);</code></li><li>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li><li>CSS3 新增属性，是 IE9+ 版本浏览器才支持的</li><li>但是现在实际开发，我们不太关注兼容性写法了，可以放心使用</li></ul><h2 id="8-背景总结"><a href="#8-背景总结" class="headerlink" title="8 背景总结"></a>8 背景总结</h2><table><thead><tr><th>属性</th><th>作用</th><th>值</th></tr></thead><tbody><tr><td><code>backgroud-color</code></td><td>背景颜色</td><td>预定义的颜色值 &#x2F; 十六进制 &#x2F; RGB代码</td></tr><tr><td><code>backgroud-image</code></td><td>背景图片</td><td>url（图片路径）</td></tr><tr><td><code>backgroud-repeat</code></td><td>是否平铺</td><td>repeat &#x2F; no-repeat &#x2F; repeat-x &#x2F; repeat-y</td></tr><tr><td><code>backgroud-position</code></td><td>背景位置</td><td>length &#x2F; position 分别是 x 和 y 坐标</td></tr><tr><td><code>backgroud-attachment</code></td><td>背景附着</td><td>scroll（背景滚动）&#x2F; fixed（背景固定）</td></tr><tr><td><code>背景简写</code></td><td>书写更简单</td><td>背景颜色 背景图片地址 背景平铺 背景滚动 背景位置</td></tr><tr><td><code>背景色半透明</code></td><td>背景颜色半透明</td><td>background: rgba(0, 0, 0, 0.3); 后面必须是4个值</td></tr></tbody></table><p>背景图片：实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片，优点是非常便于控制位置（精灵图也是一种运用场景）。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS选择器</title>
      <link href="/2023/03/11/CSS.1/"/>
      <url>/2023/03/11/CSS.1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、CSS基础选择器"><a href="#一、CSS基础选择器" class="headerlink" title="一、CSS基础选择器"></a>一、CSS基础选择器</h1><h2 id="1-CSS选择器的作用"><a href="#1-CSS选择器的作用" class="headerlink" title="1 CSS选择器的作用"></a>1 CSS选择器的作用</h2><p>选择器就是根据不同的需求把不同的标签选出来，这就是选择器的作用，简单来说，就是：选择标签用的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上 CSS 做了两件事：</p><ul><li>找到所有的 h1 标签。（选对人）</li><li>设置这些标签的样式：颜色为红色、字体大小为 25 像素。（做对事）</li></ul><h2 id="2-选择器的分类"><a href="#2-选择器的分类" class="headerlink" title="2 选择器的分类"></a>2 选择器的分类</h2><p>选择器分为 <code>基础选择器</code> 和 <code>复合选择器</code> 两个大类，本文首先介绍一下基础选择器。</p><ul><li>基础选择器是由 <code>单个</code> 选择器组成的</li><li>基础选择器又包括：<code>标签选择器</code>、<code>类选择器</code>、<code>id 选择器</code>、<code>通配符选择器</code></li></ul><h2 id="3-标签选择器"><a href="#3-标签选择器" class="headerlink" title="3 标签选择器"></a>3 标签选择器</h2><p><code>标签选择器</code>（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><blockquote><p>个人测试，只要标签名一样，不管html是否有相应标签，都会生效，部分情况会覆盖原有标签作用，部分情况生效（改变颜色对粗体标签覆盖，对一级标题标签无效）</p></blockquote><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    属性<span class="number">2</span>: 属性值<span class="number">2</span>;</span><br><span class="line">    属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>除了最后一个属性，其余属性后面跟 ; </p></blockquote><p><strong>作用：</strong>标签选择器可以把某一类标签全部选择出来，比如所有的 <code>&lt;div&gt;</code> 标签和所有的 <code>&lt;span&gt;</code> 标签。</p><p><strong>优点：</strong>能快速为页面中同类型的标签统一设置样式。</p><p><strong>缺点：</strong>不能设计差异化样式，只能选择全部的当前标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 会对所有的该标签元素运用样式，优点：快速统一，缺点：无法差异化设置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-类选择器"><a href="#4-类选择器" class="headerlink" title="4 类选择器"></a>4 类选择器</h2><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用 <code>类选择器</code>。</p><p><strong>CSS 语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如：将所有拥有 red 类的 HTML 元素均设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#EE0000</span>;</span><br><span class="line">&#125;</span><br><span class="line">···</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;red&quot;&gt;变红色&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>类选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个 <code>.</code> 号显示。</p></blockquote><p><strong>注意：</strong></p><ul><li>类选择器使用 <code>.</code>（英文点号）进行标识，后面紧跟类名</li><li>类名可以由数字、字母、下划线、中划线组成，但不能以数字或者中划线开头</li><li>一个标签可以同时有多个类名，类名之间以空格隔开</li><li>类名可以重复，一个类选择器可以同时选中多个标签</li><li>所有标签上都有class属性，class属性的属性值称为类名（类似于名字）</li></ul><blockquote><p>类名重复，不报错，但后面的完全覆盖前面的效果</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>类选择器——多类名</strong></p><p>我们可以给一个标签指定多个类名，从而达到更多的选择目的，这些类名都可以选出这个标签，简单理解就是一个标签有多个名字。</p><ul><li>在标签 class 属性中写多个类名</li><li>多个类名中间必须用 <code>空格</code> 分开</li><li>这个标签就可以分别具有这些类名的样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 一个标签可以运用多个类选择器，之间用空格隔开 */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.font35</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red font35&quot;</span>&gt;</span>zhoujirui<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>多类名开发中使用场景</strong></p><ul><li>可以把一些标签元素相同的样式（共同的部分）放到一个类里面</li><li>这些标签都可以调用这个公共的类，然后再调用自己独有的类</li><li>从而节省 CSS 代码，统一修改也非常方便（<strong>模块化、可重用化</strong>）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 类选择器最大的优势在于：复用 */</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多类名选择器在后期布局比较复杂的情况下，是使用得较多的。</p><h2 id="5-id选择器"><a href="#5-id选择器" class="headerlink" title="5 id选择器"></a>5 id选择器</h2><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p><p>HTML 元素以 id 属性来设置 id 选择器，CSS 中 id 选择器以 <code>#</code> 来定义。 </p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例如：</strong>将 id 为 nav 元素中的内容设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ee0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>id 属性不能重复命名，在一个 html 中一个 id 只能定义一次，也只能使用一次（ id 是配合 js 使用的，一个 id 只能使用一次）</p><p>测试如下，目前尚未报错，添加 js 可能出问题</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-id">#red</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#ee0000</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">···</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> id=&quot;red&quot;&gt;测试内容&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> id=&quot;red&quot;&gt;测试内容&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> id=&quot;red&quot;&gt;测试内容&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230311163806.png"></p><p><strong>id 选择器和类选择器的区别：</strong></p><ul><li>类选择器 (class) 好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用</li><li>id 选择器好比人的身份证号码，全中国是唯一的，不可重复（同一个 id 选择器只能调用一次）</li><li>id 选择器和类选择器最大的不同在于使用次数上</li><li>类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#pink</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">···</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pink&quot;</span>&gt;</span>zhoujirui<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再次强调：<strong>同一 id 只能定义一次，同一 id 选择器也只能调用一次！</strong>（对于 CSS 修改样式来说，最好使用类选择器，id 选择器主要与后面的 JS 搭配使用）。</p><h2 id="6-通配符选择器"><a href="#6-通配符选择器" class="headerlink" title="6 通配符选择器"></a>6 通配符选择器</h2><p>在 CSS 中，通配符选择器使用 <code>*</code> 定义，它表示选取页面中<strong>所有元素</strong>（标签）。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通配符选择器不需要调用，自动就给所有的元素使用样式</li><li>特殊情况才使用，后面讲解使用场景</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"># 去除各标签的默认间距，网页一般都有</span><br></pre></td></tr></table></figure><h2 id="7-基础选择器总结"><a href="#7-基础选择器总结" class="headerlink" title="7 基础选择器总结"></a>7 基础选择器总结</h2><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签，比如：p</td><td>不能差异化选择</td><td>较多</td><td><code>p &#123;color: red;&#125;</code></td></tr><tr><td>类选择器</td><td>可以选出 1 个或者 多个 标签</td><td>可以根据需求选择</td><td>非常多</td><td><code>.nav &#123;color: red;&#125;</code></td></tr><tr><td>id 选择器</td><td>一次只能选择 1 个标签</td><td>ID 属性只能在每个 HTML 文档中出现一次，也只能调用一次</td><td>一般和 js 搭配</td><td><code>#nav &#123;color: red;&#125;</code></td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况使用</td><td><code>* &#123;color: red;&#125;</code></td></tr></tbody></table><ul><li>每个基础选择器都有使用场景，都需要掌握</li><li>如果是修改样式，类选择器是使用最多的</li></ul><h1 id="二、css的复合选择器"><a href="#二、css的复合选择器" class="headerlink" title="二、css的复合选择器"></a>二、css的复合选择器</h1><h2 id="1、什么是复合选择器？"><a href="#1、什么是复合选择器？" class="headerlink" title="1、什么是复合选择器？"></a>1、什么是复合选择器？</h2><p> 在 CSS 中，可以根据选择器的类型把选择器分为<strong>基础选择器</strong>和<strong>复合选择器</strong>，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。<br>​ 复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的，可以更准确、更高效的选择目标元素（标签）<br>​ 常用的复合选择器包括：<strong>后代选择器、子选择器、并集选择器、伪类选择器</strong>等等</p><h2 id="2、后代选择器-重要）"><a href="#2、后代选择器-重要）" class="headerlink" title="2、后代选择器 (重要）"></a>2、后代选择器 (重要）</h2><p><strong>定义：</strong></p><p> 后代选择器又称为包含选择器，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p><p>语法： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 元素 元素 &#123; 具体要求 &#125; */</span><br><span class="line">ul li &#123; 样式声明 &#125;      /* 选择 ul 里面所有的 li 标签元素 */</span><br></pre></td></tr></table></figure><p>上述语法表示选择 元素 1 里面的<strong>所有</strong>元素 2 （后代元素）</p><p>语法说明：</p><ul><li>元素1 和 元素2 中间用空格隔开</li><li>元素1 是父级，元素2 是子级，最终选择的是元素2</li><li>元素2 可以是儿子，也可以是孙子等，只要是元素1 的后代即可</li><li>元素1 和 元素2 可以是任意基础选择器</li></ul><h2 id="3-子选择器"><a href="#3-子选择器" class="headerlink" title="3 子选择器"></a>3 子选择器</h2><p>子元素选择器（子选择器）只能选择作为某元素的<strong>最近一级子元素</strong>，简单理解就是选<strong>儿子辈元素</strong></p><p>注意：是<strong>最近一级而并非最近一个</strong>！</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>&gt;元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span> &#123; 样式声明 &#125;     <span class="comment">/* 选择 div 里面所有最近一级 p 标签元素 */</span></span><br></pre></td></tr></table></figure><blockquote><p>上述语法表示选择元素1 里面的所有直接后代（子元素）元素2。</p></blockquote><p>语法说明：</p><ul><li>元素1 和 元素2 中间用 <strong>大于号</strong> 隔开</li><li>元素1 是父级，元素2 是子级，最终选择的是元素2，即元素1 是不会生效样式的</li><li>元素2 <strong>必须是儿子辈，其孙子辈之类都不归他管</strong>，你也可以叫：亲儿子选择器</li></ul><h2 id="4-并集选择器"><a href="#4-并集选择器" class="headerlink" title="4 并集选择器"></a>4 并集选择器</h2><p><code>并集选择器</code> 可以选择多组标签，同时为他们定义相同的样式，通常用于<strong>集体声明</strong>。 <code>并集选择器</code> 是各选择器通过<strong>英文逗号</strong> <code>,</code> 连接而成，任何形式的选择器都可以作为并集选择器的一部分。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>,</span><br><span class="line">元素<span class="number">2</span>,</span><br><span class="line">元素<span class="number">3</span> &#123;</span><br><span class="line">    样式声明</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 规范编码风格 */</span></span><br></pre></td></tr></table></figure><blockquote><p> 上述语法表示选择元素1、元素2 和 元素3。</p></blockquote><p>语法说明：</p><ul><li>元素1 和 元素2 中间用逗号隔开（最后一个不加逗号）</li><li>逗号可以理解为和的意思</li><li>并集选择器通常用于集体声明</li></ul><h2 id="5-伪类选择器"><a href="#5-伪类选择器" class="headerlink" title="5 伪类选择器"></a>5 伪类选择器</h2><p><code>伪类选择器</code> 用于<strong>向某些选择器添加特殊的效果</strong>，比如：给链接添加特殊效果（链接伪类），或选择第 n 个元素（结构伪类）。 <code>伪类选择器</code> 书写最大的特点是用<strong>冒号</strong> <code>:</code> 表示，比如：<code>:hover</code>、<code>:first-child</code>。<br>因为伪类选择器很多，比如：<code>链接伪类</code>、<code>结构伪类</code> 等，所以这里先讲解常用的链接伪类选择器。</p><blockquote><p>伪类的由来：因为在页面中并没有这个真实存在的类，所以称为 “伪类”。</p></blockquote><h2 id="6-链接伪类选择器"><a href="#6-链接伪类选择器" class="headerlink" title="6 链接伪类选择器"></a>6 链接伪类选择器</h2><p><strong>链接伪类选择器注意事项：</strong></p><ul><li><p>为了确保生效且不冲突，请按照 <code>LVHA</code> 的顺序声明 <code>:link</code> <code>:visited</code> <code>:hover</code> <code>:active</code></p></li><li><p>因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/* a 是标签选择器（所有的链接）*/</span><br><span class="line">a &#123;</span><br><span class="line">color: gray;</span><br><span class="line">&#125;</span><br><span class="line">a:link &#123;</span><br><span class="line">color: #333;</span><br><span class="line">text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">/* 2、a:visited 选择点击过的（访问过的）链接选出来 */</span><br><span class="line">a:visited &#123;</span><br><span class="line">color: orange;</span><br><span class="line">&#125;</span><br><span class="line">/* 3、a:hover 选择鼠标经过（停留）的那个链接 */</span><br><span class="line">a:hover &#123;</span><br><span class="line">color: skyblue;</span><br><span class="line">&#125;</span><br><span class="line">/* 4、a:active 选择的是我们鼠标正在按下还没有弹起鼠标的那个链接 */</span><br><span class="line">a:active &#123;</span><br><span class="line">color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、-focus-伪类选择器"><a href="#7、-focus-伪类选择器" class="headerlink" title="7、:focus 伪类选择器"></a>7、:focus 伪类选择器</h2><p><strong>定义：</strong>focus 伪类选择器用于选取获得焦点的表单元素。</p><blockquote><p>焦点就是光标，一般情况 &lt; input&gt; 类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input:focus &#123;</span><br><span class="line">background-color: pink;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20210405202554834.gif"></p><h2 id="8-复合选择器总结"><a href="#8-复合选择器总结" class="headerlink" title="8 复合选择器总结"></a>8 复合选择器总结</h2><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是空格 <code>.nav a</code></td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是大于 <code>.nav&gt;p</code></td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是逗号 <code>.nav, .header</code></td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>重点记住 <code>a&#123;&#125;</code> 和 <code>a:hover</code> 实际开发的写法</td></tr><tr><td><code>:focus</code> 选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td><code>input:focus</code> 记住这个写法</td></tr></tbody></table><blockquote><p>强调：复合选择器的层级写得越细越好（可读性，可维护性，安全性），同时将复合选择器的层级写得越细，可以提前避免大部分的选择器优先级混乱！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5 基础认知</title>
      <link href="/2023/02/26/HTML5.1/"/>
      <url>/2023/02/26/HTML5.1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、HTML简介"><a href="#一、HTML简介" class="headerlink" title="一、HTML简介"></a>一、HTML简介</h1><h2 id="1-网页"><a href="#1-网页" class="headerlink" title="1 网页"></a>1 网页</h2><h3 id="1-1-什么是网页？"><a href="#1-1-什么是网页？" class="headerlink" title="1.1 什么是网页？"></a>1.1 什么是网页？</h3><p><strong>网页：</strong>构成网站的基本元素，通常是 HTML 格式的文件（.htm 或 .html）必须通过浏览器来阅读</p><p><strong>网站：</strong>利用前端技术制作的网页集合</p><h3 id="1-2-什么是HTML"><a href="#1-2-什么是HTML" class="headerlink" title="1.2 什么是HTML?"></a>1.2 什么是HTML?</h3><p><strong>超文本：</strong>由图片、声音、动画、视频等构成且可以相互链接的文本</p><p><strong>HTML：</strong>超文本标记语言（HTML 不是编程语言，而是由一套标记标签构成的标记语言）</p><h3 id="1-3-网页的形成"><a href="#1-3-网页的形成" class="headerlink" title="1.3 网页的形成"></a>1.3 网页的形成</h3><p>前端代码开发 ——&gt; 浏览器解析、渲染代码 ——&gt; 呈现 Web 页面</p><h2 id="2-浏览器"><a href="#2-浏览器" class="headerlink" title="2 浏览器"></a>2 浏览器</h2><h3 id="2-1-常用浏览器"><a href="#2-1-常用浏览器" class="headerlink" title="2.1 常用浏览器"></a>2.1 常用浏览器</h3><p><strong>PC 端五大浏览器：</strong><code>Edge</code>、<code>Chrome</code>、<code>Firefox</code>、<code>Safari</code>、<code>Opera</code></p><h3 id="2-2-浏览器内核"><a href="#2-2-浏览器内核" class="headerlink" title="2.2 浏览器内核"></a>2.2 浏览器内核</h3><p><strong>四大浏览器内核：</strong>IE（<code>Trident</code>）、Firefox（<code>Gecko</code>）、Safari（<code>Webkit</code>）、Chrome &#x2F; Opera &#x2F; Edge（<code>Blink</code> 属于 Webkit 的分支，Blink 兼容 Webkit）</p><blockquote><p>注：目前国内浏览器一般都采用 Webkit &#x2F; Blink 内核</p></blockquote><h2 id="3-Web标准"><a href="#3-Web标准" class="headerlink" title="3 Web标准"></a>3 Web标准</h2><p><strong>W3C：</strong><code>万维网联盟</code>，国际最著名的标准化组织之一</p><p><strong>Web 标准：</strong>W3C 组织和其他标准化组织为 Web 开发制定的一系列标准的集合</p><h3 id="3-1-为什么需要Web标准？"><a href="#3-1-为什么需要Web标准？" class="headerlink" title="3.1 为什么需要Web标准？"></a>3.1 为什么需要Web标准？</h3><p>浏览器不同，解析渲染显示的页面效果就有些许差异，通过 Web 标准可以统一浏览器解析显示效果，同时大大减少开发者的工作量（一套代码，多种浏览器平台兼容运行）</p><p>遵循 Web 标准除了可以让不同的开发人员写出的页面更标准、更统一外，还有以下优点：</p><ul><li><p>让 Web 开发前景更广阔</p></li><li><p>网页能被更广泛的设备访问</p></li><li><p>更容易被搜索引擎搜索（排名靠前）</p></li><li><p>降低网站的流量费用</p></li><li><p>使网站更易于维护</p></li><li><p>提高页面的加载速度</p></li></ul><h3 id="3-2-Web标准的构成"><a href="#3-2-Web标准的构成" class="headerlink" title="3.2 Web标准的构成"></a>3.2 Web标准的构成</h3><p><strong>主要包括三个方面：</strong><code>结构</code>、<code>表现</code>、<code>行为</code></p><ul><li><strong>结构：</strong>用于对网页元素进行整理和分类，主要指 <code>HTML</code></li><li><strong>表现：</strong>用于设置网页元素的版式、大小、颜色等外观样式，主要指 <code>CSS</code></li><li><strong>行为：</strong>网页模型的定义及交互方式的编写，主要指 <code>JavaScript</code></li></ul><p><strong>Web 标准提出的最佳体验方案：</strong><code>结构</code>、<code>样式</code>、<code>行为</code> 相互分离</p><ul><li><strong>简单的理解：</strong>结构写到 <code>.html</code> 文件中、表现写到 <code>.css</code> 文件中、行为写到 <code>.js</code> 文件中</li><li><strong>一句话解释：</strong>结构类似身体、表现类似衣服、行为类似动作（结构是一切的基础）</li></ul><h1 id="二、HTML骨架"><a href="#二、HTML骨架" class="headerlink" title="二、HTML骨架"></a>二、HTML骨架</h1><p>网页类似于一篇文章：</p><ul><li><p>每一页文章内容是有固定的结构的，如：开头、正文、落款等……</p></li><li><p>网页中也是存在固定的结构的，如：整体、头部、标题、主体</p></li><li><p>网页中的固定结构是要通过特点的 <strong>HTML标签</strong> 进行描述的</p></li></ul><p>HTML骨架：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td><code>&lt;html&gt;</code> <code>&lt;/html&gt;</code></td><td>根标签</td><td>页面中最大的标签（最基础的标签）</td></tr><tr><td><code>&lt;head&gt;</code> <code>&lt;/head&gt;</code></td><td>头部标签</td><td>在 head 标签中我们必须要设置 title 标签</td></tr><tr><td><code>&lt;title&gt;</code> <code>&lt;/title&gt;</code></td><td>标题标签</td><td>页面自己的网页标题</td></tr><tr><td><code>&lt;body&gt;</code> <code>&lt;/body&gt;</code></td><td>主体标签</td><td>包含文档的所有内容</td></tr></tbody></table><h2 id="1-文档类型声明标签"><a href="#1-文档类型声明标签" class="headerlink" title="1 文档类型声明标签"></a>1 文档类型声明标签</h2><p><code>&lt;!doctype&gt;</code> 文档类型声明，作用是告诉浏览器应该使用哪种 HTML 版本来解析渲染网页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 当前页面采用 HTML5 版本 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>&lt;!doctype&gt;</code> 声明位于文档最前面的位置，处于 &lt;html&gt; 标签之前</li><li><code>&lt;!doctype&gt;</code> 文档类型声明标签，不属于 HTML 标签</li><li>请默认统一指定 HTML5 版本 <code>&lt;!doctype html&gt;</code></li></ul><h2 id="2-lang语言种类"><a href="#2-lang语言种类" class="headerlink" title="2 lang语言种类"></a>2 lang语言种类</h2><p>用来定义当前网页显示的主语言，书写在 <code>&lt;html&gt;</code> 标签内。</p><ul><li><code>en</code> 定义语言为英语</li><li><code>zh</code> 定义语言为中文</li></ul><p>简单来说：定义为 <code>en</code> 就是面向英文用户的网页，定义为 <code>zh</code> 就是面向中国大陆用户的网页。</p><blockquote><p><code>en-GB</code> 英文（英国）</p><p><code>en-US</code> 英文（美国）</p><p><code>zh-CN</code> 中文（简体，中国大陆）</p><p><code>zh-SG</code> 中文（简体，新加坡）</p><p><code>zh-HK</code> 中文（繁体，香港）</p><p><code>zh-MO</code> 中文（繁体，澳门）</p><p><code>zh-TW</code> 中文（繁体，台湾）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>语言的设置是为了方便 <code>浏览器搜索推荐</code> 以及触发 <code>浏览器翻译功能</code>，并不是说设置了某类主语言后网页中就不能存在其他类型的语言了。</p></blockquote><h3 id="3-字符集"><a href="#3-字符集" class="headerlink" title="3 字符集"></a>3 字符集</h3><p><strong>字符集：</strong>多个字符的集合，以便计算机能够识别和储存各种文字。</p><p>在 <code>&lt;head&gt;</code> 标签内，可以通过 <code>&lt;meta&gt;</code> 标签的 <code>charset</code> 属性来规定 HTML 文档应该使用哪种字符编码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>charset</code> 常用的值有：<code>GB2312</code>、<code>BIG5</code>、<code>GBK</code>、<code>UTF-8</code>，其中 <code>UTF-8</code> 也被称为：万国码，基本包含了全世界所有国家需要用到的字符。</p><p><strong>注意：</strong>字符设置是必须的，否则极大可能引起网页乱码。一般情况下，统一使用 “UTF-8” 编码，尽量统一写成标准的 <code>UTF-8</code>，不要写成 “utf8” 或 “UTF8”。</p><p><strong>标准骨架：</strong></p><p>空白情况下打<strong>英文 ！</strong> ，然后tab直接生成骨架</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、HTML基础标签"><a href="#三、HTML基础标签" class="headerlink" title="三、HTML基础标签"></a>三、HTML基础标签</h1><h2 id="1-标签结构"><a href="#1-标签结构" class="headerlink" title="1 标签结构"></a>1 标签结构</h2><p>HTML 标签是由<strong>尖括号</strong>包围的关键字词，例如：<code>&lt;html&gt;</code>。</p><p>结构说明：</p><ol><li><p>标签由&lt;、&gt;、&#x2F;、英文单词或字母组成。并且把标签中&lt;&gt;包括起来的英文单词或字母称为<strong>标签名</strong></p></li><li><p>常见标签由两部分组成，我们称之为：<strong>双标签</strong>。前部分叫<strong>开始标签</strong>，后部分叫<strong>结束标签</strong>，两部分之间包裹内容</p></li></ol><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230307161001.png"></p><ol start="3"><li>少数标签由一部分组成，我们称之为：<strong>单标签</strong>。自成一体，无法包裹内容。</li></ol><blockquote><p>标签打中间的<strong>英文</strong>然后按<strong>tab</strong>即可直接生成对应标签</p></blockquote><blockquote><p>根据需要划分，截取段落类标签一般是双标签，截断类标签一般是单标签</p></blockquote><blockquote><p>HTML5 规范中明确说明单标签 <code>/</code> 是可以忽略的，<strong>目前的实际开发中习惯不给单标签添加斜线</strong>。</p></blockquote><h2 id="2-标签关系"><a href="#2-标签关系" class="headerlink" title="2 标签关系"></a>2 标签关系</h2><ol><li>包含关系</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>并列关系</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-注释"><a href="#3-注释" class="headerlink" title="3 注释"></a>3 注释</h2><p>HTML 中的注释以：<code>&lt;!--</code> 开头，以 <code>--&gt;</code> 结束。</p><p>在VS Code中注释的快捷键：ctrl + &#x2F;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-特殊字符"><a href="#4-特殊字符" class="headerlink" title="4 特殊字符"></a>4 特殊字符</h2><p>在 HTML 页面中，一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。</p><table><thead><tr><th align="left">特殊字符</th><th align="left">描述</th><th align="left">字符的代码</th></tr></thead><tbody><tr><td align="left"><code> </code></td><td align="left">空格符</td><td align="left"><code>&amp;nbsp;</code></td></tr><tr><td align="left"><code>&lt;</code></td><td align="left">小于号</td><td align="left"><code>&amp;lt;</code></td></tr><tr><td align="left"><code>&gt;</code></td><td align="left">大于号</td><td align="left"><code>&amp;gt;</code></td></tr><tr><td align="left"><code>&amp;</code></td><td align="left">和号</td><td align="left"><code>&amp;amp;</code></td></tr><tr><td align="left"><code>±</code></td><td align="left">正负号</td><td align="left"><code>&amp;plusmn;</code></td></tr><tr><td align="left"><code>×</code></td><td align="left">乘号</td><td align="left"><code>&amp;times;</code></td></tr><tr><td align="left"><code>÷</code></td><td align="left">除号</td><td align="left"><code>&amp;divide;</code></td></tr><tr><td align="left"><code>²</code></td><td align="left">上标</td><td align="left"><code>&amp;sup;</code></td></tr><tr><td align="left"><code>²</code></td><td align="left">下标</td><td align="left"><code>&amp;sub;</code></td></tr></tbody></table><blockquote><p>其余符号若有需要请百度</p></blockquote><h2 id="5-排版标签"><a href="#5-排版标签" class="headerlink" title="5 排版标签"></a>5 排版标签</h2><h3 id="5-1-标题标签"><a href="#5-1-标题标签" class="headerlink" title="5.1 标题标签"></a>5.1 标题标签</h3><p>HTML 提供了 6 个等级的网页标题，即：<code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>标签语义：</strong>作为标题使用，并且依据重要性递减。</p><p><strong>特点：</strong></p><ul><li>加了标题的文字会自动加粗，字号也会依次变大</li><li>一个标题就独占一行，同一行标题后不会再放置其他任何内容（后期可以通过 CSS 修改）</li></ul><h3 id="5-2-段落标签"><a href="#5-2-段落标签" class="headerlink" title="5.2 段落标签"></a>5.2 段落标签</h3><p>段落标签：在新闻和文章的页面中，用于分段显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一个段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>便签语义：</strong>可以把 HTML 文档分割为若干段落。</p><p><strong>特点：</strong></p><ul><li>文本在一个段落中会根据浏览器窗口的大小自动换行</li><li>段落和段落之间保有空隙（段间距）</li><li>同一段落里的不同行文字之间也有一定的空隙（行间距）</li></ul><h3 id="5-3-换行标签"><a href="#5-3-换行标签" class="headerlink" title="5.3 换行标签"></a>5.3 换行标签</h3><p>换行标签 ： 某段文本强制换行显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>内容</span><br></pre></td></tr></table></figure><p><strong>标签语义：</strong>强制换行。</p><p><strong>特点：</strong></p><ul><li><code>&lt;br&gt;</code> 是个单标签</li><li><code>&lt;br&gt;</code> 标签只是简单地开始新的一行，跟段落不一样，所以不会产生段间距</li></ul><h3 id="5-4-水平线标签"><a href="#5-4-水平线标签" class="headerlink" title="5.4 水平线标签"></a>5.4 水平线标签</h3><p>水平线标签：分割不同主题内容的水平线</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内容<span class="tag">&lt;<span class="name">hr</span>&gt;</span>内容</span><br></pre></td></tr></table></figure><p><strong>标签语义</strong>：主题的分割转换</p><p><strong>特点</strong>：</p><ul><li><p>单标签</p></li><li><p>在页面中显示一条水平线</p></li></ul><p>代码实现图如下：</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230307164051.png"></p><h2 id="6-文本格式化标签"><a href="#6-文本格式化标签" class="headerlink" title="6 文本格式化标签"></a>6 文本格式化标签</h2><p>场景：需要让文字<strong>加粗</strong>、<u>下划线</u>、<em>倾斜</em>、<del>删除线</del>等效果</p><table><thead><tr><th>语义</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>加粗</td><td><code>&lt;strong&gt;</code> <code>&lt;/strong&gt;</code> 或 <code>&lt;b&gt;</code> <code>&lt;/b&gt;</code></td><td>介于可读性、搜索引擎优化及屏幕阅读器适配推荐使用前者</td></tr><tr><td>倾斜</td><td><code>&lt;em&gt;</code> <code>&lt;/em&gt;</code> 或 <code>&lt;i&gt;</code> <code>&lt;/i&gt;</code></td><td>介于可读性、搜索引擎优化及屏幕阅读器适配推荐使用前者</td></tr><tr><td>删除线</td><td><code>&lt;del&gt;</code> <code>&lt;/del&gt;</code> 或 <code>&lt;s&gt;</code> <code>&lt;/s&gt;</code></td><td>介于可读性、搜索引擎优化及屏幕阅读器适配推荐使用前者</td></tr><tr><td>下划线</td><td><code>&lt;ins&gt;</code> <code>&lt;/ins&gt;</code> 或 <code>&lt;u&gt;</code> <code>&lt;/u&gt;</code></td><td>介于可读性、搜索引擎优化及屏幕阅读器适配推荐使用前者</td></tr></tbody></table><p><strong>标签语义：</strong>突出重要性的强调语境</p><h2 id="7-媒体标签"><a href="#7-媒体标签" class="headerlink" title="7 媒体标签"></a>7 媒体标签</h2><h3 id="7-1-路径"><a href="#7-1-路径" class="headerlink" title="7.1 路径"></a>7.1 路径</h3><p><strong>绝对路径：</strong>指目录下的绝对位置，可直接到达目标位置，通常<strong>从盘符开始</strong>的路径</p><p>例如：</p><ul><li>盘符开头：D:\day01\images\1.jpg</li><li>完整的网络地址：一个网络链接，可搭配图床使用</li></ul><p><strong>相对路径：</strong>从<strong>当前文件开始</strong>出发找目标文件的过程</p><p>概念普及：</p><ul><li>当前文件：当前的html网页</li><li>目标文件：要找到的图片</li></ul><p>相对路径分类：</p><ul><li>同级目录</li><li>下级目录</li><li>上级目录</li></ul><table><thead><tr><th>相对路径分类</th><th>符号</th><th>说明</th><th>写法</th></tr></thead><tbody><tr><td>同级路径</td><td><code>.</code></td><td>如：<code>&lt;img src=&quot;baidu.png&quot; /&gt;</code></td><td>目标文件名字</td></tr><tr><td>下级路径</td><td><code>/</code></td><td>如：<code>&lt;img src=&quot;image/baidu.png&quot; /&gt;</code></td><td>文件夹名&#x2F;目标文件名字</td></tr><tr><td>上级路径</td><td><code>../</code></td><td>如：<code>&lt;img src=&quot;../image/baidu.png&quot; /&gt;</code></td><td>..&#x2F;目标文件名字</td></tr></tbody></table><p><strong>注意：</strong></p><ul><li>相对路径为 <code>/</code>（正斜杆），绝对路径为 <code>\</code>（反斜杆）</li><li>实际开发中建议使用相对路径或网络地址（都是 <code>/</code> 正斜杆）</li></ul><blockquote><p>这里所说的绝对路径为 <code>\</code>（反斜杠）指的是在 Windows 环境中，而 Linux 系统依旧是正斜杠。</p></blockquote><h3 id="7-2-图片标签"><a href="#7-2-图片标签" class="headerlink" title="7.2 图片标签"></a>7.2 图片标签</h3><p>作用：在网页中显示图片</p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像URL&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230307191642.png"></p><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td><code>src</code></td><td>图片路径</td><td>指出图片的地址</td></tr><tr><td><code>url</code></td><td>统一资源定位符</td><td>地址、网址</td></tr><tr><td><code>alt</code></td><td>文本</td><td>替换文本，图像显示失败时显示（为了提高 SEO 及适配屏幕阅读器，建议都把 alt 写上）</td></tr><tr><td><code>title</code></td><td>文本</td><td>提示文本，鼠标放到图片上，显示的提示文字</td></tr><tr><td><code>width</code></td><td>像素</td><td>设置图像的宽度（了解，后面通过 CSS 设置）</td></tr><tr><td><code>height</code></td><td>像素</td><td>设置图像的高度（了解，后面通过 CSS 设置）</td></tr><tr><td><code>border</code></td><td>像素</td><td>设置图像的边框粗细（了解，后面通过 CSS 设置）</td></tr></tbody></table><p><strong>图像标签的注意点：</strong></p><ul><li>标签的属性写在<strong>开始标签内部</strong></li><li>标签上可以同时存在多个属性</li><li>属性之间以空格隔开</li><li>标签名与属性之间<strong>必须以空格隔开</strong></li><li>属性之间没有顺序之分</li><li>如果只设置width或height中的一个，另一个没设置的会自动等比例缩放（此时图片不会变形</li><li>如果同时设置了width和height两个，若设置不当此时图片可能会变形</li></ul><h3 id="7-3-音频标签"><a href="#7-3-音频标签" class="headerlink" title="7.3 音频标签"></a>7.3 音频标签</h3><p>作用：在网页中插入音频</p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./music.mp3 controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常见属性：</p><table><thead><tr><th>属性名</th><th>功能</th></tr></thead><tbody><tr><td>src</td><td>路径</td></tr><tr><td>controls</td><td>显示播放的控件</td></tr><tr><td>autoplay</td><td>自动播放</td></tr><tr><td>loop</td><td>循环播放</td></tr></tbody></table><blockquote><p>音频标签目前支持三种格式：<strong>MP3</strong>、Wav、Ogg</p></blockquote><h3 id="7-4-视频标签"><a href="#7-4-视频标签" class="headerlink" title="7.4 视频标签"></a>7.4 视频标签</h3><p>作用：在网页中插入音频</p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./video.mp4 controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常见属性：</p><table><thead><tr><th>属性名</th><th>功能</th></tr></thead><tbody><tr><td>src</td><td>路径</td></tr><tr><td>controls</td><td>显示播放的控件</td></tr><tr><td>autoplay</td><td>自动播放</td></tr><tr><td>loop</td><td>循环播放</td></tr></tbody></table><blockquote><p>视频标签目前支持三种格式：<strong>MP4</strong>、Wav、Ogg</p></blockquote><h2 id="8-超链接标签"><a href="#8-超链接标签" class="headerlink" title="8 超链接标签"></a>8 超链接标签</h2><p>在 HTML 标签中，<code>&lt;a&gt;</code> 标签用于定义超链接，作用是从一个页面链接到另一个页面</p><p><strong>作用：</strong>点击之后，从一个页面跳转到另一个页面</p><p>称呼： a标签、超链接、锚链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本、图像或其他内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特点：</p><ul><li>双标签，内部可以包裹内容</li><li>如果需要a标签点击之后去指定页面，需要设置a标签的href属性</li></ul><h3 id="8-1-herf属性"><a href="#8-1-herf属性" class="headerlink" title="8.1 herf属性"></a>8.1 herf属性</h3><p>属性值：点击之后跳转去哪一个网页（目标网页的路径）</p><h3 id="8-2target属性"><a href="#8-2target属性" class="headerlink" title="8.2target属性"></a>8.2target属性</h3><p>属性值：目标网页的打开形式</p><p>取值：</p><ul><li>_self：默认值，原网页跳转，覆盖原网页</li><li>_blank：新窗口跳转</li></ul><h3 id="8-3-链接分类"><a href="#8-3-链接分类" class="headerlink" title="8.3 链接分类"></a>8.3 链接分类</h3><ul><li><strong>外部链接：</strong>直接给出一个网站，例如：<code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</code> </li><li><strong>内部链接：</strong>网站内部页面之间相互链接，直接链接内部页面名称即可，例如： <code>&lt;a href=&quot;./about.html&quot;&gt;关于页&lt;/a&gt;</code></li><li><strong>空链接：</strong>如果当时没有确定链接目标时，<code>&lt;a href=&quot;javascript:void(0)&quot;&gt;哪也不去&lt;/a&gt;&quot;</code>，当用户点击链接时 void(0) 计算为 0，但 Javascript 上没有任何效果</li><li><strong>下载链接：</strong>如果 href 里面地址是一个文件或者压缩包（前提：路径包含文件类型后缀名，如：<code>.exe</code>、<code>.zip</code> 等），便会下载这个文件，如果是图片、视频、PDF则会打开一个新窗口预览</li><li><strong>网页元素链接：</strong>在网页中的各种网页元素，如：文本、图像、表格、音频、视频等都可以添加超链接</li><li><strong>锚点链接：</strong>点击链接，可以快速定位到当前页面中的某个位置<ul><li>在链接文本的 href 属性中，设置属性值的 <code>#名字</code> 的形式，如：<code>&lt;a href=&quot;#two&quot;&gt;第2集&lt;/a&gt;</code></li><li>找到目标位置标签（此处以 h3 标签为例），里面添加一个 <code>id属性=&quot;刚才的名字&quot;</code>，如：<code>&lt;h3 id=&quot;two&quot;&gt;第2集介绍&lt;/h3&gt;</code></li><li><code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</code> 定位到页面顶部</li></ul></li></ul><h1 id="四、HTML排版标签"><a href="#四、HTML排版标签" class="headerlink" title="四、HTML排版标签"></a>四、HTML排版标签</h1><h2 id="1-列表标签"><a href="#1-列表标签" class="headerlink" title="1 列表标签"></a>1 列表标签</h2><h3 id="1-1-列表的应用场景"><a href="#1-1-列表的应用场景" class="headerlink" title="1.1 列表的应用场景"></a>1.1 列表的应用场景</h3><p>场景：在网页中按照行展示关联性的内容，如：新闻列表、排行榜、账单等</p><p>特点：按照行的方式，整齐显示内容</p><p>种类：无序列表、有序列表、自定义列表 </p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230309130647.png"></p><p>无序列表最常用，有序列表偶尔用，自定义列表底部导航用</p><h3 id="1-2-无序列表"><a href="#1-2-无序列表" class="headerlink" title="1.2 无序列表"></a>1.2 无序列表</h3><p>场景：在网页中表示一组无顺序之分的列表，如：新闻列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">         内容</span><br><span class="line">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示特点：</p><ul><li>列表的每一项前默认显示圆点标识</li></ul><p>注意点：</p><ul><li>ul 标签中只允许包含 li 标签</li><li>li 标签可以包含任意内容</li></ul><h3 id="1-3-有序列表"><a href="#1-3-有序列表" class="headerlink" title="1.3 有序列表"></a>1.3 有序列表</h3><p>场景：在网页中表示一组有顺序之分的列表，如：热搜</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">         内容</span><br><span class="line">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示特点：</p><ol><li>列表的每一项前默认显示序号标识</li></ol><p>注意点：</p><ol><li>ol 标签中只允许包含 li 标签</li><li>li 标签可以包含任意内容</li></ol><h3 id="1-4-自定义列表"><a href="#1-4-自定义列表" class="headerlink" title="1.4 自定义列表"></a>1.4 自定义列表</h3><p>场景：在网页的底部导航中通常会使用自定义列表实现</p><p>标签组成：</p><table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>dl</td><td>表示自定义列表的整体，用于包裹 dt &#x2F; dd 标签</td></tr><tr><td>dt</td><td>表示自定义列表的主题</td></tr><tr><td>dd</td><td>表示自定义列表的针对主题的每一项内容</td></tr></tbody></table><p>显示特点：</p><ul><li>dd 前会默认显示缩进效果</li></ul><p>注意点：</p><ul><li>dl 标签中只允许包含 dt &#x2F; dd 标签</li><li>dt &#x2F; dd 标签可以包含任意内容</li></ul><p>例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>赵六<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>99<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>99<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>99<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>99<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230309154437.png"></p><h1 id="五、表格标签"><a href="#五、表格标签" class="headerlink" title="五、表格标签"></a>五、表格标签</h1><p>场景：在网页中以行+列的单元格的方式整齐展示和数据，如：学生成绩表</p><h2 id="1-表格的基本标签"><a href="#1-表格的基本标签" class="headerlink" title="1 表格的基本标签"></a>1 表格的基本标签</h2><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230310165350.png"></p><table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>table</td><td>表格整体，包裹多个tr</td></tr><tr><td>tr</td><td>表格每行，包裹多个tr</td></tr><tr><td>td</td><td>表格单元格，包裹内容</td></tr></tbody></table><blockquote><p>标签的嵌套关系：table &gt; tr &gt; td</p></blockquote><h2 id="2-表格相关属性"><a href="#2-表格相关属性" class="headerlink" title="2 表格相关属性"></a>2 表格相关属性</h2><p>场景：设置表格基本展示效果</p><p>常见相关属性：</p><table><thead><tr><th>属性名</th><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>border</td><td>数字</td><td>边框宽度</td></tr><tr><td>width</td><td>数字</td><td>表格宽度</td></tr><tr><td>height</td><td>数字</td><td>表格高度</td></tr></tbody></table><blockquote><p>实际开发时针对于样式效果推荐用CSS设置</p></blockquote><blockquote><p>没有 border 不会显示边框</p></blockquote><h2 id="3-表格标题和表头单元格标签"><a href="#3-表格标题和表头单元格标签" class="headerlink" title="3 表格标题和表头单元格标签"></a>3 表格标题和表头单元格标签</h2><p>场景：在表格中表示整体大标题和一列小标题</p><p>其他标签：</p><table><thead><tr><th>标签名</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>caption</td><td>表格大标题</td><td>表格的大标题，默认在表格顶部居中显示</td></tr><tr><td>th</td><td>表头单元格</td><td>一列小标题，默认加粗，常用来表示表格第一行</td></tr></tbody></table><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230310165417.png"></p><h2 id="4-合并单元格"><a href="#4-合并单元格" class="headerlink" title="4 合并单元格"></a>4 合并单元格</h2><p>场景：将水平或垂直多个单元格合并成一个单元格</p><p>通过左上原则，确定保留谁删除谁：</p><ul><li>上下合并→只保留最上的，删除其他</li><li>左右合并→只保留最左的，删除其他</li></ul><table><thead><tr><th>属性名</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>rowspan</td><td>合并单元格的个数</td><td>跨行合井，将多行的单元格垂直合并</td></tr><tr><td>colspan</td><td>合并单元格的个数</td><td>跨列合井，将多列的单元格水平合井</td></tr></tbody></table><blockquote><p>只有同一个结构标签中的单元格才能合并，不能跨结构标签合并（不能跨：thead、tbody、tfoot）</p></blockquote><h1 id="六、表单标签"><a href="#六、表单标签" class="headerlink" title="六、表单标签"></a>六、表单标签</h1><h2 id="1-input"><a href="#1-input" class="headerlink" title="1 input"></a>1 input</h2><p>场景：在网页中显示收集用户信息的表单效果，如：登录页、注册页</p><p>input标签可以通过type属性值的不同，展示不同效果：</p><table><thead><tr><th>标签名</th><th>type属性值</th><th>说明</th></tr></thead><tbody><tr><td>input</td><td>text</td><td>文本框，用于输入文字（输入内容直接可见）</td></tr><tr><td>input</td><td>password</td><td>密码框，输入内容不直接可见</td></tr><tr><td>input</td><td>radio</td><td>单选框</td></tr><tr><td>input</td><td>checkbox</td><td>多选框</td></tr><tr><td>input</td><td>file</td><td>文件选择，用于上传文件</td></tr><tr><td>input</td><td>submit</td><td>提交键</td></tr><tr><td>input</td><td>reset</td><td>重置键</td></tr><tr><td>input</td><td>button</td><td>无固定功能键，配合 js 实现多功能</td></tr></tbody></table><h3 id="1-1-文本框text"><a href="#1-1-文本框text" class="headerlink" title="1.1 文本框text"></a>1.1 文本框text</h3><p>场景：在网页中显示输入单行文本的表单控件</p><p>常用属性：</p><p>placeholder：占位符，提升用户输入内容的文本</p><p>value属性：用户输入的内容，提交之后会发送给后端服务器</p><p>name属性：当前控件的含义，提交之后可以告诉后端发送过去的数据是什么含义</p><p>后端接收到数据的格式是：name的属性值 &#x3D; value的属性值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-密码password"><a href="#1-2-密码password" class="headerlink" title="1.2 密码password"></a>1.2 密码password</h3><p>场景：在网页中显示输入密码的表单控件</p><p>常用属性（同文本框)</p><h3 id="1-3-单选框radio"><a href="#1-3-单选框radio" class="headerlink" title="1.3 单选框radio"></a>1.3 单选框radio</h3><p>场景：在网页中显示多选一的单选表单控件</p><p>常用属性：</p><p>name：分组。有相同name属性值的单选框为-一组，一组中同时只能有一个被选中</p><p>checked：默认选中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>女</span><br></pre></td></tr></table></figure><h3 id="1-4-复选框checkbox"><a href="#1-4-复选框checkbox" class="headerlink" title="1.4 复选框checkbox"></a>1.4 复选框checkbox</h3><p>场景：在网页中显示多选多的多选表单控件</p><p>常用属性（同单选框）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span>吃饭 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span>睡觉<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span>打豆豆 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-文件选择file"><a href="#1-5-文件选择file" class="headerlink" title="1.5 文件选择file"></a>1.5 文件选择file</h3><p>场景：在网页中显示文件选择的表单控件</p><p>常用属性：</p><p>multiple：文件多选</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-6-按钮button"><a href="#1-6-按钮button" class="headerlink" title="1.6 按钮button"></a>1.6 按钮button</h3><p>场景：在网页中显示不同功能的按钮表单控件</p><blockquote><p>如果需要实现以上按钮功能，需要配合form标签使用</p></blockquote><blockquote><p>form使用方法：用form标签把表单标签一起包裹起来即可</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    其余内容</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230310172339.png"></p><h2 id="2-button（独立于input的button标签）"><a href="#2-button（独立于input的button标签）" class="headerlink" title="2 button（独立于input的button标签）"></a>2 button（独立于input的button标签）</h2><p>场景：在网页中显示用户点击的按钮</p><p>标签名：button</p><p>type属性值（同input的按钮系列）</p><table><thead><tr><th>标签名</th><th>type属性值</th><th>说明</th></tr></thead><tbody><tr><td>button</td><td>submit</td><td>提交键</td></tr><tr><td>button</td><td>reset</td><td>重置键</td></tr><tr><td>button</td><td>button</td><td>无固定功能键，配合 js 实现多功能</td></tr></tbody></table><blockquote><p>谷歌浏览器中button默认是提交按钮</p></blockquote><blockquote><p>button标签是双标签，更便于包裹其他内容：文字、图片等</p></blockquote><h2 id="3-select下拉菜单标签"><a href="#3-select下拉菜单标签" class="headerlink" title="3 select下拉菜单标签"></a>3 select下拉菜单标签</h2><p>场景：在网页中提供多个选择项的下拉菜单表单控件</p><p>标签组成：</p><p>select标签：下拉菜单的整体</p><p>option标签：下拉菜单的每一项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常见属性：</p><p>selected：下拉菜单的默认选中，没有特定指出则第一个为默认选中</p><h2 id="4-textarea文本域"><a href="#4-textarea文本域" class="headerlink" title="4 textarea文本域"></a>4 textarea文本域</h2><p>场景：在网页中提供可输入多行文本的表单控件</p><p>常见属性：</p><p>cols：规定了文本域内可见宽度</p><p>rows：规定了文本域内可见行数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-label"><a href="#5-label" class="headerlink" title="5 label"></a>5 label</h2><p>场景：常用于绑定内容与表单标签的关系</p><p>使用方法1：</p><ul><li>使用label标签把内容（如：文本）包裹起来</li><li>在表单标签上添加id属性</li><li>在label标签的for属性中设置对应的id属性值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;性别&quot;</span> <span class="attr">id</span>=<span class="string">&quot;男&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;性别&quot;</span> <span class="attr">id</span>=<span class="string">&quot;女&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>id 和 for 的内容相同用来链接</p></blockquote><p>使用方法2：</p><ul><li>直接使用label标签把内容（如：文本）和表单标签一起包裹起来</li><li>需要把label标签的for属性删除即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span>吃饭 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span>睡觉 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;爱好&quot;</span>&gt;</span>打豆豆 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>我的实验中一个 label 只能对一个选项起作用，不能一个 label 包含多个选项</p></blockquote><h1 id="七、语义化标签"><a href="#七、语义化标签" class="headerlink" title="七、语义化标签"></a>七、语义化标签</h1><h2 id="1-没有语义的布局标签-div和span"><a href="#1-没有语义的布局标签-div和span" class="headerlink" title="1 没有语义的布局标签-div和span"></a>1 没有语义的布局标签-div和span</h2><p>场景：实际开发网页时会大量频繁的使用到div和span这两个没语义的布局标签</p><p>div标签：一行只显示一个（独占一行）</p><p>span标签：一行可以显示多个</p><h2 id="2-有语义的布局标签"><a href="#2-有语义的布局标签" class="headerlink" title="2 有语义的布局标签"></a>2 有语义的布局标签</h2><p>场景：在HTML5新版本中，推出了一些有语义的布局标签供开发者使用</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230310213927.png"></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">caption</span>&gt;</span>优秀学生信息表格<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>年级<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>班级<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>高三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>110<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>三年二班<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>120<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>三年三班<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>评语<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span>你们都有光明的未来<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230310215613.png"></p><p>  经过上手实验，合并表格是占据位置但不覆盖内容，如果要合并内容，应在相应位置空出，合并处会自动补齐，后续内容依次入座</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>宁可累死自己，也要卷死他人<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入昵称&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        性别：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        所在地：</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;guangzhou&quot;</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        学历：</span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;学历&quot;</span>&gt;</span>高中<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;学历&quot;</span>&gt;</span>本科<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;学历&quot;</span>&gt;</span>硕士<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;学历&quot;</span>&gt;</span>博士<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        专业：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;专业&quot;</span>&gt;</span>计算机</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;专业&quot;</span>&gt;</span>土木工程</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;专业&quot;</span>&gt;</span>外国语</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;专业&quot;</span>&gt;</span>数学<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        个人介绍：<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span>&gt;</span>我保证<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                学术严谨</span><br><span class="line">                态度严谨</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>我同意所有条款<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230310222707.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python语法</title>
      <link href="/2023/02/23/Python2/"/>
      <url>/2023/02/23/Python2/</url>
      
        <content type="html"><![CDATA[<h1 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h1><p>字面量： 在代码中，被写下来的固定值，称为字面量</p><p>Python中常用的有6中数据类型</p><table><thead><tr><th>类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>数字 number</td><td>整数 int<br />浮点数 float<br />复数 complex<br />布尔 bool</td><td>整数<br />浮点数<br />复数<br />布尔值</td></tr><tr><td>字符串 string</td><td>描述文本的数据类型</td><td>任意数量的字符组成</td></tr><tr><td>列表 list</td><td>有序的可变序列</td><td>Python中使用最频繁的数据类型，可有序记录一堆数据</td></tr><tr><td>元组 tuple</td><td>有序的不可变序列</td><td>有序记录一堆不可变的Python数据集合</td></tr><tr><td>集合 set</td><td>无序不重复集合</td><td>无序记录一堆不重复的Python数据集合</td></tr><tr><td>字典 dictionary</td><td>无序Key-Value集合</td><td>无序记录一堆Key-Value型的Python数据集合</td></tr></tbody></table><blockquote><p>python中，字符串需要用 “ ” 包围</p></blockquote><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>注释： 代码中对程序代码进行解释说明的文字</p><p>作用： 注释不会被执行，仅对程序代码进行解释说明</p><ul><li>单行注释： 以 # 开头，#右边的文字进行解释说明，</li></ul><blockquote><p>“#”  和注释内容一般建议以一个空格隔开</p></blockquote><ul><li>多行注释： 以一对三个 “ ” “ 引起来，解释说明代码，” 中的内容可以不止一行。</li></ul><blockquote><p> 多行注释一般用于解释: </p><ul><li>整个Python代码文件</li><li>类</li><li>方法</li></ul></blockquote><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>变量： 程序运行时，存储计算结果或能表示值的抽象概念</p><p>格式： 变量名称 &#x3D; 变量的值</p><p>特征：变量的值可以发生改变</p><p>Python数据输出： print（），（）中即为输出内容</p><p>Python输出多份内容： 各内容之间用 ， 隔开，如 print（内容1，内容2…内容n）</p><p>Python数据输入：input（），（）中即为输出内容</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>数据类型： 入门阶段主要接触 字符串string 整型int 浮点型float 三种</p><p>验证数据类型： type（被查看类型的数据）</p><p>用变量存储type（）的返回值： 变量名 &#x3D; type（被查看类型的数据）</p><blockquote><p>变量没有类型,常说的变量类型指的是变量数据的类型</p></blockquote><p>类型转换：改变一个数据的类型。 类型（数据），如 int（X），即为将x转为int型</p><blockquote><ul><li>任何类型都能转为字符串类</li><li>只有字符串全为数字才能转数字类型</li><li>浮点数转整数会丢失精度</li></ul></blockquote><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>Python中可以给许多东西取名，如：变量、方法、类等。这些名字，统一称为标识符，用来做内容的标记。</p><h2 id="命名规则（强制性要求）"><a href="#命名规则（强制性要求）" class="headerlink" title="命名规则（强制性要求）"></a>命名规则（强制性要求）</h2><ol><li>内容限定</li></ol><p>标识符命名只允许出现：</p><ul><li>英文</li><li>中文</li><li>数字</li><li>下划线 _</li></ul><blockquote><ol><li><p>不推荐使用中文</p></li><li><p>不能以数字开头</p></li></ol></blockquote><ol start="2"><li>大小写敏感</li></ol><p>Python能完全区分大小写</p><ol start="3"><li>不可使用关键字</li></ol><p>Python有一系列单词，称为关键字，不能以关键字作为标识符</p><p>关键字同样大小写敏感</p><h2 id="命名规范（建议型要求）"><a href="#命名规范（建议型要求）" class="headerlink" title="命名规范（建议型要求）"></a>命名规范（建议型要求）</h2><p>变量命名规范：</p><ol><li>见名知意</li><li>下划线命名法：多个单词组合变量名，用下划线做分隔</li><li>英文字母全小写</li></ol><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>算术运算符</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>数学相加 1+1&#x3D;2</td></tr><tr><td>-</td><td>减</td><td>得到复数 -1<br />数学相减 2-1&#x3D;1</td></tr><tr><td>*</td><td>乘</td><td>数学相乘 2*2&#x3D;4</td></tr><tr><td>&#x2F;</td><td>除</td><td>数学相除 4&#x2F;2&#x3D;2</td></tr><tr><td>&#x2F;&#x2F;</td><td>取整</td><td>返回商的整数部分 111 &#x2F;&#x2F; 10&#x3D;11</td></tr><tr><td>%</td><td>取余</td><td>返回除法的余数 9%2&#x3D;1</td></tr><tr><td>**</td><td>指数</td><td>数学指数 3**3&#x3D;27</td></tr></tbody></table><p>赋值运算符</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td><td>将 &#x3D; 右边的值赋给 &#x3D; 左边</td></tr><tr><td>+&#x3D;</td><td>加法赋值</td><td>c +&#x3D; a 等于 c &#x3D; c + a</td></tr><tr><td>-&#x3D;</td><td>减法赋值</td><td>c -&#x3D; a 等于 c &#x3D; c - a</td></tr><tr><td>*&#x3D;</td><td>乘法赋值</td><td>c *&#x3D; a 等于 c &#x3D; c * a</td></tr><tr><td>&#x2F;&#x3D;</td><td>除法赋值</td><td>c &#x2F;&#x3D; a 等于 c &#x3D; c &#x2F; a</td></tr><tr><td>%&#x3D;</td><td>取模赋值</td><td>c %&#x3D; a 等于 c &#x3D; c % a</td></tr><tr><td>**&#x3D;</td><td>幂赋值</td><td>c ** &#x3D; a 等于 c &#x3D; c ** a</td></tr><tr><td>&#x2F;&#x2F;&#x3D;</td><td>取整除赋值</td><td>c &#x2F;&#x2F;&#x3D; a 等于 c &#x3D; c &#x2F;&#x2F; a</td></tr></tbody></table><h1 id="字符串拓展"><a href="#字符串拓展" class="headerlink" title="字符串拓展"></a>字符串拓展</h1><h2 id="字符串定义"><a href="#字符串定义" class="headerlink" title="字符串定义"></a>字符串定义</h2><ol><li>单引号定义：变量名 &#x3D; ‘ 内容 ‘</li><li>双引号定义：变量名 &#x3D; “ 内容 “</li><li>三引号定义：变量名 &#x3D; “”” 内容 “””</li></ol><p>三引号定义和多行注释写法一样，同样支持换行操作。</p><p>使用变量接受就是字符串。</p><p>不使用变量接受，就是多行注释。</p><h2 id="字符串本身包含-“-”-’-‘"><a href="#字符串本身包含-“-”-’-‘" class="headerlink" title="字符串本身包含 “ ” ’ ‘"></a>字符串本身包含 “ ” ’ ‘</h2><p>单引号定义：可以内含双引号</p><p>双引号定义：可以内含单引号</p><p>可以使用转义字符 \ 解除引号效果，变为普通字符串</p><blockquote><p>强烈建议用双引号定义字符串内容，尽量避免单引号</p></blockquote><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><p>如果我们有两个字符串，可以将其拼接成-一个字符串，通过+号即可完成，如: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;编程语言&quot;</span>+<span class="string">&quot;Python&quot;</span>)</span><br></pre></td></tr></table></figure><p>不过一般，单纯的2个字符串字面量进行拼接显得很呆，-般，字面量和变量或变量和变量之间会使用拼接，如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = Python</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;现在是&quot;</span> + name + <span class="string">&quot;语言&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注:无法和非字符串类型（int、float等）进行拼接</p></blockquote><h2 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h2><h3 id="常规格式化"><a href="#常规格式化" class="headerlink" title="常规格式化"></a>常规格式化</h3><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot; %占位符 &quot; % 变量 </span><br><span class="line">&quot; %占位符1%占位符2%占位符3 &quot; % （变量1, 变量2,变量3)</span><br></pre></td></tr></table></figure><blockquote><p>多个占位符之间可以没有东西间隔，占据占位符的变量之间要用  ，  间隔</p></blockquote><table><thead><tr><th>格式符号</th><th>转化</th></tr></thead><tbody><tr><td>%s</td><td>将内容转为字符串，放入占位位置</td></tr><tr><td>%d</td><td>将内容转为整数，放入占位位置</td></tr><tr><td>%f</td><td>将内容转为浮点数，放入占位位置</td></tr></tbody></table><blockquote><p>%s：</p><ul><li><p>%：表示要占位</p></li><li><p>s：表示将变量变成字符串放入占位的地方</p></li></ul></blockquote><h3 id="快速格式化"><a href="#快速格式化" class="headerlink" title="快速格式化"></a>快速格式化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f&quot;内容&#123;变量1&#125;...&#123;变量n&#125;&quot;</span><br></pre></td></tr></table></figure><blockquote><p>这种方式：不理会类型，不做精度控制</p></blockquote><h3 id="表达式格式化"><a href="#表达式格式化" class="headerlink" title="表达式格式化"></a>表达式格式化</h3><p>表达式：一条具有明确执行结果的代码语句</p><p>如：数学计算式、变量定义…有具体的结果的代码语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print（&quot; 1+1 的结果是：%d&quot;%( 1+1 )）</span><br><span class="line">print（f&quot; 1+1 的结果是：%d&quot;%&#123; 1+1 &#125;）</span><br><span class="line">print(&quot;字符串在Python中的类型是: %s&quot; % type(&#x27;字符串&#x27;))</span><br></pre></td></tr></table></figure><h2 id="数字精度控制"><a href="#数字精度控制" class="headerlink" title="数字精度控制"></a>数字精度控制</h2><p>使用辅助符号 “m.n” 来控制数据的宽度和精度</p><ul><li>m，控制宽度，要求是数字（很少使用）,设置的宽度小于数字自身，不生效</li><li>.n（注意是 .n ），控制小数点精度，要求是数字，会进行小数的四舍五入</li></ul><p>示例：</p><ul><li><p>%5d：表示将整数的宽度控制在5位，如数字11，被设置为5d，就会变成：   11，用三个空格补足宽度。</p></li><li><p>%5.2f：表示将宽度控制为5，将小数点精度设置为2</p></li></ul><p>小数点和小数部分也算入宽度计算。</p><ul><li>对11.345设置了%7.2f 后，整数部分限制4位精度后，结果是：  11.35。2个空格补足宽度。小数部分限制2位精度后，四舍五入为 .35</li><li>%.2f：表示不限制宽度，只设置小数点精度为2，如11.345设置%.2f后，结果是11.35</li></ul><h1 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h1><p>数据输入：input</p><p>语法：input()语句从键盘获取输入，使用一个变量接收input语句获取的键盘输入数据，变量 &#x3D; input()</p><p>input()语句可以在要求使用者输入内容前，输出提示内容，变量 &#x3D; input(“提示内容”)</p><blockquote><p>input 仅能输入字符串数据</p></blockquote><h1 id="基本语句"><a href="#基本语句" class="headerlink" title="基本语句"></a>基本语句</h1><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><p>bool用于描述是或否</p><p>布尔类型的字面量：bool只有2种字面量</p><p>True  表示真（是、肯定）</p><p>False 表示假 （否、否定）</p><p>布尔类型用于表示真和假：变量名称 &#x3D;  True &#x2F; False（即为2种布尔类型字面量之一）</p><p>比较运算符用于计算真和假：变量名称 &#x3D; 比较运算符表达式</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228160220.png"></p><p>比较运算符</p><table><thead><tr><th><strong>运算符</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>判断内容是否相等，满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;3，则(a &#x3D;&#x3D; b) 为 True</td></tr><tr><td>!&#x3D;</td><td>判断内容是否不相等，满足为True，不满足为False</td><td>如a&#x3D;1,b&#x3D;3，则(a !&#x3D; b) 为 True</td></tr><tr><td>&gt;</td><td>判断运算符左侧内容是否大于右侧满足为True，不满足为False</td><td>如a&#x3D;7,b&#x3D;3，则(a &gt; b) 为 True</td></tr><tr><td>&lt;</td><td>判断运算符左侧内容是否小于右侧满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;7，则(a &lt; b) 为 True</td></tr><tr><td>&gt;&#x3D;</td><td>判断运算符左侧内容是否大于等于右侧满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;3，则(a &gt;&#x3D; b) 为 True</td></tr><tr><td>&lt;&#x3D;</td><td>判断运算符左侧内容是否小于等于右侧满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;3，则(a &lt;&#x3D; b) 为 True</td></tr></tbody></table><h2 id="条件判断语句"><a href="#条件判断语句" class="headerlink" title="条件判断语句"></a>条件判断语句</h2><p>if 语句</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228160642.png"></p><blockquote><p>if 语句记得带 :</p><p>if 紧跟的语句要控制缩进，空4格</p><p>if后面可以跟多条语句</p></blockquote><p>if else 语句</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228160912.png"></p><blockquote><p>else 与 if 同级，二者不需要缩进，else后语句和 if 语句相同缩进</p><p>else 不需要判断条件，if 不成立直接运行else</p></blockquote><p>if elif else 语句</p><p>elif即为 else if</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228161136.png"></p><blockquote><p>注意缩进</p><p>elif 语句可以写多个</p><p>判断是互斥且有顺序的</p><p>else也可以省略不写，效果等同多个独立的 if 判断</p></blockquote><p>嵌套 if 语句</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228161330.png"></p><blockquote><p>注意缩进</p></blockquote><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>while 循环：只要条件满足会无限循环执行</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228161705.png"></p><blockquote><p>注意缩进、冒号</p><p>请规划好循环终止条件，否则将无限循环</p><p>条件需提供布尔类型结果，True继续，False停止</p></blockquote><p>while 嵌套</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228162023.png"></p><blockquote><p>注意条件的控制，避免无限循环</p><p>多层嵌套，空格缩进来确定层次关系</p></blockquote><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p>for 循环</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228163038.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 定义字符串name</span><br><span class="line">name = ”abcdefg”</span><br><span class="line"># for循环处理字符串</span><br><span class="line">for x in name: </span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><blockquote><p>for循环是无法定义循环条件的，被处理的数据集不可能无限大</p><p>要注意，循环内的语句，需要有空格缩进</p></blockquote><p>语法中的待处理数据集称之为：可迭代类型</p><p>可迭代类型指：其内容可以一个个依次取出的一种类型，包括：字符串、列表、元组等</p><p>range 语句</p><p><strong>range 可以用来控制for的循环次数</strong></p><p>语法1 ：range(num)  </p><p>获取一个从0开始，到num结束的数字序列（不含num本身）</p><p>如 range(5)取得的数据是：[0, 1, 2, 3, 4]</p><p>语法2 ：range(num1, num2)</p><p>获得一个从num1开始，到num2结束的数字序列（不含num2本身）</p><p>如 range(5, 10)取得的数据是：[5, 6, 7, 8, 9]</p><p>语法3 ：range(num1, num2，step)</p><p>获得一个从num1开始，到num2结束的数字序列（不含num2本身）。</p><p>数字之间的步长以step为准（step默认为1）。</p><p>如 range(5, 10, 2)取得的数据是：[5, 7, 9]</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228165257.png"></p><p>临时变量，在编程规范上，作用范围（作用域），只限定在for循环内部</p><p>如果在for循环外部访问临时变量：实际上是可以访问到的，在编程规范上，是不允许、不建议这么做的</p><p>如果想符合规范访问该变量，在循环之前定义即可</p><p>for 嵌套</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230228170329.png"></p><blockquote><p>缩进、冒号</p></blockquote><h3 id="循环中断"><a href="#循环中断" class="headerlink" title="循环中断"></a>循环中断</h3><p>continue</p><p>continue关键字用于：中断本次循环，直接进入下一次循环</p><p>continue可以用于：for循环和while循环，效果一致</p><p>break</p><p>break关键字用于：直接结束所在循环</p><p>break可以用于：for循环和while循环，效果一致</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数：是组织好的，可重复使用的，用来实现特定功能的代码段</p><p>使用函数的好处是：将功能封装在函数内，可供随时随地重复利用提高代码的复用性，减少重复代码，提高开发效率</p><h2 id="函数定义："><a href="#函数定义：" class="headerlink" title="函数定义："></a>函数定义：</h2><p>函数的定义：</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301095304.png"></p><p>函数的调用：函数名( 参数 )</p><blockquote><p>参数如不需要，可以省略</p><p>返回值如不需要，可以省略</p><p>函数必须先定义后使用</p></blockquote><h2 id="函数的传入参数"><a href="#函数的传入参数" class="headerlink" title="函数的传入参数"></a>函数的传入参数</h2><p>传入参数的功能是：在函数进行计算的时候，接受外部（调用时）提供的数据</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301095535.png"></p><blockquote><p>参数之间使用逗号进行分隔</p><p>传入的时候，按照顺序传入数据，使用逗号分隔</p></blockquote><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301100736.png"></p><blockquote><p>传入参数的数量是不受限制的。可以不使用参数也可以仅使用任意N个参数</p></blockquote><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><p>返回值：就是程序中函数完成事情后，最后给调用者的结果</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301100955.png"></p><blockquote><p> 如图，变量就能接收到函数的返回值</p></blockquote><p>None类型</p><p>Python中有一个特殊的字面量：None，其类型是：&lt;class ‘NoneType’&gt;</p><p>无返回值的函数，实际上就是返回了：None这个字面量</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301103658.png"></p><p>None可以主动使用return返回，效果等同于不写return语句：</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301103521.png"></p><p>None作为一个特殊的字面量，用于表示：空、无意义，其有非常多的应用场景</p><ol><li><p>用在函数无返回值上</p></li><li><p>用在if判断上：</p></li></ol><ul><li><p>在if判断中，None等同于False</p></li><li><p>一般用于在函数中主动返回None，配合if判断做相关处理</p></li></ul><ol start="3"><li>用于声明无内容的变量上：</li></ol><ul><li><p>定义变量，但暂时不需要变量有具体值，可以用None来代替</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = None</span><br></pre></td></tr></table></figure></li></ul><h2 id="函数的说明文档"><a href="#函数的说明文档" class="headerlink" title="函数的说明文档"></a>函数的说明文档</h2><p>给函数添加说明文档，辅助理解函数的作用</p><p>通过多行注释的形式，对函数进行说明解释，内容应写在函数体之前</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301105015.png"></p><p>在PyCharm编写代码时，可以通过鼠标悬停，查看调用函数的说明文档</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301105048.png"></p><h2 id="函数嵌套"><a href="#函数嵌套" class="headerlink" title="函数嵌套"></a>函数嵌套</h2><p>函数嵌套调用指的是一个函数里面又调用了另外一个函数</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301105710.png"></p><p>如果函数A中，调用了另外一个函数B，那么先把函数B中的任务都执行完毕之后才会回到上次 函数A执行的位置</p><h2 id="函数多返回值"><a href="#函数多返回值" class="headerlink" title="函数多返回值"></a>函数多返回值</h2><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301113949.png"></p><blockquote><p> 变量之间用逗号隔开</p><p>支持不同类型的数据return</p><p>按照返回值的顺序，写对应顺序的多个变量接收即可</p></blockquote><h2 id="函数多种传参方式"><a href="#函数多种传参方式" class="headerlink" title="函数多种传参方式"></a>函数多种传参方式</h2><p>函数有4中常见参数使用方式： </p><ul><li>位置参数：调用函数时根据函数定义的参数位置来传递参数</li></ul><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301114152.png"></p><blockquote><p>注意：传递的参数和定义的参数的顺序及个数必须一致</p></blockquote><ul><li>关键字参数：函数调用时通过“键&#x3D;值”形式传递参数</li></ul><p>作用: 可以让函数更加清晰、容易使用，同时也清除了参数的顺序需求.</p><p><img src="C:\Users\CWL25\AppData\Roaming\Typora\typora-user-images\image-20230301114317009.png" alt="image-20230301114317009"></p><blockquote><p>注意：函数调用时，如果有位置参数时，位置参数必须在关键字参数的前面，但关键字参数之间不存在先后顺序</p></blockquote><ul><li>缺省参数：缺省参数也叫默认参数，用于定义函数，为参数提供默认值，调用函数时可不传该默认参数的值（注意：所有位置参数必须出现在默认参数前，包括函数定义和调用）</li></ul><p>作用: 当调用函数时没有传递参数, 就会使用默认是用缺省参数对应的值</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301114401.png"></p><blockquote><p>注意：函数调用时，如果为缺省参数传值则修改默认参数值, 否则使用这个默认值</p></blockquote><ul><li>不定长参数：不定长参数也叫可变参数. 用于不确定调用的时候会传递多少个参数(不传参也可以)的场景</li></ul><p>作用: 当调用函数时不确定参数个数时, 可以使用不定长参数</p><p>不定长参数的类型:    </p><p>位置不定长传递</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301114640.png"></p><blockquote><p> 注意：传进的所有参数都会被args变量收集，它会根据传进参数的位置合并为一个元组(tuple)，args是元组类型，这就是位置传递</p></blockquote><p>关键字不定长传递</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301114703.png"></p><blockquote><p> 注意：参数是“键&#x3D;值”形式的形式的情况下, 所有的“键&#x3D;值”都会被kwargs接受, 同时会根据“键&#x3D;值”组成字典.</p></blockquote><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><h3 id="函数作为参数传递"><a href="#函数作为参数传递" class="headerlink" title="函数作为参数传递"></a>函数作为参数传递</h3><p>函数本身也可以作为参数传入另一个函数内</p><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><p>变量作用域指的是变量的作用范围（变量在哪里可用，在哪里不可用），主要分为两类：局部变量和全局变量</p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>局部变量是定义在函数体内部的变量，即只在函数体内部生效</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/image-20230301105931372.png"></p><blockquote><p>变量a是定义在testA所数内部的变量，在函数外部访问则立即报错.</p></blockquote><blockquote><p>局部变量的作用：在函数体内部，临时保存数据，即当函数调用完成后，则销毁局部变量</p></blockquote><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>全局变量指的是在函数体内、外都能生效的变量</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301110224.png"></p><blockquote><p>该数据，在函数A和函数B和函数外中都能使用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">num = 100</span><br><span class="line">def testA():</span><br><span class="line">    print(num)</span><br><span class="line">testA()    </span><br><span class="line">def testB():</span><br><span class="line">    num = 200</span><br><span class="line">    print(num)</span><br><span class="line">testB()    </span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301110438.png"></p><blockquote><p>testB函数内部的 num &#x3D; 200 是定义了一个局部变量</p></blockquote><h3 id="global关键字"><a href="#global关键字" class="headerlink" title="global关键字"></a>global关键字</h3><p>使用 global关键字 可以在函数内部声明变量为全局变量, 如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num = 100</span><br><span class="line">def testA():</span><br><span class="line">    print(num)</span><br><span class="line">testA()    </span><br><span class="line">def testB():</span><br><span class="line">    global num</span><br><span class="line">    num = 200</span><br><span class="line">    print(num)</span><br><span class="line">testB()    </span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230301110630.png"></p><h1 id="数据容器"><a href="#数据容器" class="headerlink" title="数据容器"></a>数据容器</h1><p>数据容器：一个容器可以容纳多份数据</p><p>学习数据容器，就是为了批量存储或批量使用多份数据</p><p>Python中的数据容器：一种可以容纳多份数据的数据类型，容纳的每一份数据称之为1个元素每一个元素，可以是任意类型的数据，如字符串、数字、布尔等</p><p>数据容器根据特点的不同，如：</p><ul><li>是否支持重复元素</li><li>是否可以修改</li><li>是否有序</li></ul><p>分为5类，分别是：列表（list）、元组（tuple）、字符串（str）、集合（set）、字典（dict）</p><h2 id="列表（list）"><a href="#列表（list）" class="headerlink" title="列表（list）"></a>列表（list）</h2><h3 id="列表的定义"><a href="#列表的定义" class="headerlink" title="列表的定义"></a>列表的定义</h3><p>列表内的每一个数据，称之为元素，以 [] 作为标识，列表内每一个元素之间用, 逗号隔开</p><p>列表可以一次存储多个数据，且可以为不同的数据类型，支持嵌套</p><p>元素的数据类型没有任何限制，甚至元素也可以是列表</p><p>列表的定义语法[元素1, 元素2, 元素3, ……]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list1 = [1,a,&quot;abc&quot;]</span><br><span class="line">list2 = [[123],[456]]</span><br></pre></td></tr></table></figure><h3 id="列表的下标索引"><a href="#列表的下标索引" class="headerlink" title="列表的下标索引"></a>列表的下标索引</h3><p>使用列表的下标索引从列表中取出元素</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230302162006.png"></p><p>正序：列表中的每一个元素，都有其位置下标索引，从前向后的方向，从0开始，依次递增 </p><p>list[x]：列表中正数第 x + 1个元素</p><p>反向：从后向前的方向，从-1开始，依次递增减</p><p>list[x]：列表中倒数第 x 个元素</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230302181512.png"></p><p>如果列表是嵌套的列表，同样支持下标索引</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/20230302181530.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 2层嵌套list</span><br><span class="line">my_list=[[1,2，3]，[4，5，6]]</span><br><span class="line">#获取内层第一个list</span><br><span class="line">print (my_list[0])      #结果:[1，2，3]</span><br><span class="line">#获取内层第一个ist的第一个元素</span><br><span class="line">print(my_ list[0][0])   #结果:1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门</title>
      <link href="/2023/02/22/Python1/"/>
      <url>/2023/02/22/Python1/</url>
      
        <content type="html"><![CDATA[<h1 id="一-初始Python"><a href="#一-初始Python" class="headerlink" title="一.初始Python"></a>一.初始Python</h1><h2 id="1-Python安装"><a href="#1-Python安装" class="headerlink" title="1. Python安装"></a>1. Python安装</h2><p>Python官网：<a href="https://www.python.org/">https://www.python.org/</a></p><p>点击download下载</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221205810.png"></p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221210948.png"></p><p>将下面的√，√上，图中我的已勾选，接着傻瓜式安装</p><p>如果没有勾选，在用命令提示符运行Python可能出现</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221212539.png"></p><p>出现该问题，重新安装Python即可</p><h2 id="2-第一个Python程序"><a href="#2-第一个Python程序" class="headerlink" title="2. 第一个Python程序"></a>2. 第一个Python程序</h2><p>老规矩，hello world</p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221212007.png"></p><p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/img/20230221215926.png"></p><blockquote><p>编程语言中的符号记得纯英文</p></blockquote><h2 id="3-Python解释器"><a href="#3-Python解释器" class="headerlink" title="3. Python解释器"></a>3. Python解释器</h2><p>Python解释器是一个计算机程序，用来翻译Python程序并提交给计算机执行。</p><p>它的功能简单：</p><ul><li>翻译代码</li><li>提交给计算机运行</li></ul><p>.py文件：让Python解释器运行的文件</p><h2 id="4-Python开发环境"><a href="#4-Python开发环境" class="headerlink" title="4. Python开发环境"></a>4. Python开发环境</h2><p>Python开发程序常见的有：</p><ul><li>Python解释器环境内，执行单元代码</li><li>使用Python解释器程序，执行Python代码文件（ .py文件）</li><li><strong>都用第三方IDE(集成开发工具)，如PyCharm</strong></li></ul><p>PyCharm是当下全球Python开发最主流的工具</p><p>PyCharm官网：<a href="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/</a></p><p>PyCharm快捷键：</p><ul><li>ctrl + alt + s：打开软件设置</li><li>ctrl + d：复制当前代码</li><li>shift + alt +  上|下：将当前代码上 | 下移</li><li>ctrl + shift + f10：运行当前代码</li><li>shift + f6 ：重命名文件</li><li>ctrl + a|c|v|x|f：复制、黏贴、剪切、搜索</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>至每一个来到这里的人</title>
      <link href="/2023/02/22/hello-world/"/>
      <url>/2023/02/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/icyhalo/picgo/main/TEHSN5228DVNJ0IKG8LMEF5.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
